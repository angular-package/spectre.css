// Sass.
@use 'sass:map';

// Variables.
@use '../../variables/core' as *;
@use '../variables/filter.var' as *;

// Functions.
@use '../../chips/functions/chip-class.function' as *;
@use '../../functions/var/get-var.function' as *;
@use '../functions/filter-class.function' as *;

// Mixins.
@use '../../mixins/color/background.mixin' as *;
@use '../../mixins/color/color.mixin' as *;
@use '../../mixins/margin.mixins' as *;

// Placeholders.
@use '../placeholders';

// The `filter()` mixin.
@mixin filter($class: '', $selector: (), $dictionary: ()) {
  #{filter-class($class, $selector, $dictionary)} {
    // .filter-nav {
    #{filter-class(($class, 'nav'), (), $dictionary)} {
      @include margin(('layout', 'spacing', true), 0);
    }

    // .filter-body {
    #{filter-class(($class, 'body'), (), $dictionary)} {
      display: flex;
      flex-wrap: wrap;
    }

    // .filter-tag {
    #{filter-class(($class, 'tag'), (), $dictionary)} {
      @for $i from 0 through (map.get($filter, 'number')) {
        // &#tag-#{$i}:checked ~ .filter-nav .chip[for="tag-#{$i}"] {
        &#tag-#{$i}:checked ~ #{filter-class(($class, 'nav'), (), $dictionary)} #{chip-class()}[for="tag-#{$i}"] {
          @extend %filter-checked-nav;
        }
      }

      @for $i from 1 through (map.get($filter, 'number')) {
        // &#tag-#{$i}:checked ~ .filter-body .filter-item:not([data-tag~="tag-#{$i}"]) {
        &#tag-#{$i}:checked ~ #{filter-class(($class, 'body'), (), $dictionary)} #{filter-class(($class, 'item'), (), $dictionary)}:not([data-tag~="tag-#{$i}"]) {
          @extend %filter-checked-body;
        }
      }
    }
  }
}
