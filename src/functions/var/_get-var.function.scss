@use 'sass:map';
@use 'sass:list';
@use 'sass:string';

// Variables.
@use '../../variables/core' as *;

// Functions.
@use '../get-from-list.function' as *;
@use '../map-get-default.function' as *;
@use './var-adjust.function' as *;
@use './var-unit.function' as *;
@use 'css-var.function' as *;
@use 'var-name.function' as *;
@use 'var-negative.function' as *;

// The function returns the CSS var function or calc function with the specified name, prefix, optional suffix, or unit.
// Unit is used for variables with a separated unit from the value.
// $name: (string, ('negative': true, 'prefix': 'spectre', 'suffix': 'sm', 'unit': true))
// Interchangeably:
// $name: (string, true, 5) translates -> (name, unit, adjust)
// $name: (string, 3, false) translates -> (name, adjust, unit)
@function get-var(
  $name,
  $adjust: null,
  $unit: false,
  $prefix: $var-prefix,
  $suffix: null
) {
  $var: get-from-list(
    $name,
    'name',
    (
      'unit': 'boolean',
      'adjust': 'number',
    ),
    (
      'unit': 'boolean',
      'adjust': 'number',
    ),
    'negative',
    'prefix',
    'suffix'
  );

  @return var-negative(
    var-adjust(
      var-unit(
        map.get($var, 'name'),
        map-get-default($var, 'unit', $unit),
        map-get-default($var, 'prefix', $prefix),
        map.get($var, 'suffix')
      ),
      map.get($var, 'adjust')
    ),
    map.get($var, 'negative')
  );
}
