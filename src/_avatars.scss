// Variables.
@use 'variables' as *;

// Functions.
@use 'functions/color/color.function' as *;
@use 'functions/var/get-var.function' as *;

// Mixins.
@use 'mixins/avatar' as *;
@use 'mixins/color/color.mixin' as *;
@use 'mixins/color/background.mixin' as *;
@use 'mixins/padding.mixins' as *;
@use 'mixins/z-index.mixin' as *;

// Avatars
.avatar,
.#{$var-prefix}-avatar {
  @include avatar-base();
  @include background('primary');
  border-radius: 50%;
  @include color('light', $alpha: 0.85);
  display: inline-block;
  font-weight: 300;
  line-height: 1.25;
  margin: 0;
  position: relative;
  vertical-align: middle;

  &.avatar-xs {
    @include avatar-base('unit-4');
  }
  &.avatar-sm {
    @include avatar-base('unit-6');
  }
  &.avatar-lg {
    @include avatar-base('unit-12');
  }
  &.avatar-xl {
    @include avatar-base('unit-16');
  }

  img {
    border-radius: 50%;
    height: 100%;
    position: relative;
    width: 100%;
    @include z-index('0');
  }

  .avatar-icon,
  .avatar-presence {
    @include background('bg');
    bottom: 14.64%;
    height: 50%;
    @include padding('border-width-lg');

    position: absolute;
    right: 14.64%;
    transform: translate(50%, 50%);
    width: 50%;
    @include z-index('0', 1);
  }

  .avatar-presence {
    @include background('gray');
    box-shadow: 0 0 0 get-var('border-width', $suffix: 'lg') color('light');
    border-radius: 50%;
    height: 0.5em;
    width: 0.5em;

    &.online {
      @include background('success');
    }

    &.busy {
      @include background('error');
    }

    &.away {
      @include background('warning');
    }
  }

  &[data-initial]::before {
    color: currentColor;
    content: attr(data-initial);
    left: 50%;
    position: absolute;
    top: 50%;
    transform: translate(-50%, -50%);
    @include z-index('0');
  }
}
