// Sass.
@use 'sass:list';
@use 'sass:map';

// Functions.
@use '../list.index.function' as *;
@use 'list.nth-first.function' as *;
@use 'list.nth-range.function' as *;

// Status: DONE
// The `nth-limit()` function.
@function nth-limit($list, $offset: 1, $limit: null, $default: null) {
  $limit: if(not $limit, 1 $offset, $offset $limit);
  $i: 1;
  @each $value in $limit {
    @if type-of($value) == list {
      $value: index($list, $value...);
    } @else {
      @if list.index(first start, $value) {
        $value: 1;
      } @else if list.index(end last length, $value) {
        $value: list.length($list);
      }
    }

    $limit: list.set-nth($limit, $i, $value);
    $i: $i + 1;
  }

  $result: nth-range(
    $list,
    list.nth($limit, 1),
    calc(list.nth($limit, 2) + list.nth($limit, 1) - 1),
    $default
  );

  @return nth-first($result);
}

// Examples.
// Limit: number;
// @debug nth-limit(('27', '28', '29', 30), 2); // ("27", "28")
// @debug nth-limit(('a', 'b', 'c', 'd', 'e', 'f'), 1); // "a"
// @debug nth-limit(('a', 'b', 'c', 'd', 'e', 'f'), 2); // "a", "b"
// @debug nth-limit(('a', 'b', 'c', 'd', 'e', 'f'), 5); // "a", "b", "c", "d", "e"

// Limit: string;
// @debug nth-limit(('27', '28', '29', 30), first); // 27
// @debug nth-limit(('27', '28', '29', 30), last); // "27", "28", "29", 30
// @debug nth-limit(('27', '28', '29', 30), start); // 27
// @debug nth-limit(('27', '28', '29', 30), end); // "27", "28", "29", 30

// Limit: map;
// @debug nth-limit(('27', '28', '29', 30), (limit: first)...); // "27"
// @debug nth-limit(('27', '28', '29', 30), (limit: last)...); // "27", "28", "29", 30
// @debug nth-limit(('27', '28', '29', 30), (offset: 2, limit: last)...); // ("28", "29", 30, )
// @debug nth-limit(('27', '28', '29', 30), (offset: first, limit: last)...); // ("27", "28", "29", 30, )

// offset - limit
// @debug nth-limit(('a', 'b', 'c', 'd', 'e', 'f'), 1 4...); // "a", "b", "c", "d"
// @debug nth-limit(('a', 'b', 'c', 'd', 'e', 'f'), 2 4...); // "b", "c", "d", "e"
// @debug nth-limit(('a', 'b', 'c', 'd', 'e', 'f'), (2, 5)...); // "b", "c", "d", "e", "f"
// @debug nth-limit(('a', 'b', 'c', 'd', 'e', 'f'), (5, 3)...); // "e", "f", null

// @debug nth-limit(('27', '28', '29', 30), first last...); // "27", "28", "29", 30
// @debug nth-limit(('27', '28', '29', 30), (first, last)...); // "27", "28", "29", 30
// @debug nth-limit(('27', '28', '29', 30), (last, first)...); // 30
// @debug nth-limit(('27', '28', '29', 30), (start, end)...); // "27", "28", "29", 30
// @debug nth-limit(('27', '28', '29', 30), (end, start)...); // 30

// Query
// @debug nth-limit(('27', '28', '29', 30), (first '==' '28', 2)...); // "28", "29"
// @debug nth-limit(('27', '28', '29', 30, 'a', true, (a: 1), (1, 2)), (first '==' '28', last ':==' bool)...); // "28", "29", 30, "a", true, (a: 1)

// Query adjust index. // TODO: Consider.
// @debug nth-limit(('27', '28', '29', 30, 'a', true, (a: 1), (1, 2)), (first '==' '28', last ':==' bool)); // "27", "28", "29", 30, "a", true
// @debug nth-limit(('27', '28', '29', 30, 'a', true, (a: 1), (1, 2)), ((first '==' '28') -1, (last ':==' bool) 2)); // "27", "28", "29", 30, "a", true

