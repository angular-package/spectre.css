// Sass.
@use 'sass:map';

// Variables.
@use '../../variables/core' as *;
@use '../variables/bar.var' as *;

// Functions.
@use '../functions/bar-class.function' as *;

// @use '../../borders/functions/border-size-var.function' as *;
// @use '../../functions/class/class.function' as *;
@use '../../functions/color/color.function' as *;

// @use '../../functions/var/get-var.function' as *;
@use '../../functions/var/unit-var.function' as *;

// Mixins.
@use '../../borders/mixins/radius/border-radius.mixin' as *;
@use '../../mixins/color/background.mixin' as *;
@use '../../mixins/color/color.mixin' as *;
@use '../../mixins/font-size.mixin' as *;

// @use '../../mixins/margin.mixins' as *;
// @use '../../mixins/z-index.mixin' as *;

// The `bar()` mixin.
@mixin bar(
  $class: '',
  $selector: (),
  $sizes: map.get($bar, 'size'),
  $dictionary: ()
) {
  // Bars
  // .#{$class-prefix}bar {
  // #{class($bar-name, $class: map.get($bar, 'class'))} {
  #{bar-class($class, $selector, $dictionary)} {
    display: flex;
    flex-wrap: nowrap;
    width: 100%;
    height: unit-var('4');

    // border-radius: get-var('border-radius');
    @include border-radius;
    @include background('bg-dark');

    // &.bar-sm {
    // #{class(('&', $bar-name, 'sm'), $class: map.get($bar, 'class'))} {
    @if type-of($sizes) == map {
      @each $size, $value in $sizes {
        #{bar-class(('&', $class, $size), (), $dictionary)} {
          height: unit-var($value);
        }
      }
    }

    // TODO: attr() support
    // .bar-item {
    // #{class(($bar-name, 'item'), $class: map.get($bar, 'class'))} {
    #{bar-class(($class, 'item'), (), $dictionary)} {
      position: relative;
      display: block;
      flex-shrink: 0;
      width: 0;
      height: 100%;
      @include background('primary');
      @include color('light');

      // font-size: get-var('font-size', $suffix: 'sm');
      // font-size: get-var(('font', 'size', 'sm'));
      @include font-size('sm');

      line-height: unit-var('4');
      text-align: center;

      &:first-child {
        // border-bottom-left-radius: get-var('border-radius');
        // border-top-left-radius: get-var('border-radius');
        @include border-radius(('bottom-left', 'top-left'));
      }

      &:last-child {
        flex-shrink: 1;

        // border-bottom-right-radius: get-var('border-radius');
        // border-top-right-radius: get-var('border-radius');
        @include border-radius(('bottom-right', 'top-right'));
      }
    }
  }
}
