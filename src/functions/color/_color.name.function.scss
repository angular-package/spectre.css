// Sass.
@use 'sass:list';
@use 'sass:meta';

// Functions.
@use '../string';

// Status: DONE
// The function returns the proper color if the given `$name` was the color code.
@function name($name, $names...) {
  $result: ();
  @if list.length($name) == 1 {
    $name: list.nth($name, 1);
    @if type-of($name) == string and (string.index($name, -dark) or string.index($name, -light)) {
      $result: list.append($result, string.replace($name, first dark dark, first light light));
    } @else {
      $result: if(
        (meta.type-of($name) == string and not string.index($name, color)) or meta.type-of($name) == color,
        list.append($name, color),
        $name
      );
    }
  } @else {
    $index: list.index($name, dark) or list.index($name, light);
    $result: if(
      $index and not list.index($name, color),
      list.append(list.set-nth($name, $index, color), list.nth($name, $index)),
      $name
    );
  }
  @return if(list.length($names) > 0, list.join($result, $names), $result);
}

// Examples.
// string
// @debug name(dark); // dark color
// @debug name(gray); // gray color
// @debug name('gray'); // "gray" color
// @debug name(light); // light color
// @debug name(dark color); // dark color
// @debug name(dark-color); // dark color
// @debug name(primary); // primary-color
// @debug name(primary-dark); // primary-dark
// @debug name(primary-light); // primary-light

// list
// @debug name(primary dark); // primary color dark
// @debug name(primary light); // primary color light
