@use '../variables' as *;

// Functions.
@use '../functions/var/get-var.function' as *;
@use '../functions/var/unit-var.function' as *;
@use '../functions/var/var-negative.function' as *;

// Mixins.
@use '../mixins/border/border.mixin' as *;
@use '../mixins/color/background.mixin' as *;
@use '../mixins/color/color.mixin' as *;
@use '../mixins/margin.mixins' as *;
@use '../mixins/padding-size-variants.mixin' as *;
@use '../mixins/padding.mixins' as *;

// Divider
.divider,
.#{$var-prefix}-divider,
.divider-vert {
  display: block;
  position: relative;

  &[data-content]::after {
    // background: $bg-color-light; // old spectre.css
    // background: color('bg-color-light'); // old @angular-package/spectre.css
    @include background('bg-light');
    // color: $gray-color; // old spectre.css
    // color: color('gray-color'); // old @angular-package/spectre.css
    @include color('gray');
    content: attr(data-content);
    display: inline-block;
    // font-size: $font-size-sm; // old spectre.css
    font-size: get-var('font-size', $suffix: 'sm');
    // padding: 0 $unit-2; // old spectre.css
    // padding: 0 get-var('unit-2'); // old @angular-package/spectre.css
    @include padding('unit-0', 'unit-2');
    // transform: translateY(-$font-size-sm + $border-width); // old spectre.css
    transform: translateY(calc(var-negative(get-var('font-size', $suffix: 'sm')) + get-var('border-width')));
  }

  &.divider-no-border {
    border-color: transparent;
    &::before {
      border-color: transparent;
    }
  }

  @include padding-size-variants('divider');
}

.divider,
.#{$var-prefix}-divider {
  // border-top: $border-width solid $border-color-light; // old spectre.css
  // border-top: get-var('border-width') solid color('border-color-light'); // old @angular-package/spectre.css
  @include border($side: top, $color: 'border-light');
  // height: $border-width; // old spectre.css
  height: get-var('border-width');
  // margin: $unit-2 0; // old spectre.css
  // margin: get-var('unit-2') 0; // old @angular-package/spectre.css
  @include margin('unit-2', 'unit-0');

  &[data-content] {
    // margin: $unit-4 0; // old spectre.css
    // margin: get-var('unit-4') 0; // old @angular-package/spectre.css
    @include margin('unit-4', 'unit-0');
  }
}

.divider-vert {
  display: block;
  // padding: $unit-4; // old spectre.css
  // padding: get-var('unit-4'); // old @angular-package/spectre.css
  padding: unit-var('4');

  &::before {
    // border-left: $border-width solid $border-color; // old spectre.css
    // border-left: get-var('border-width') solid color('border-color'); // old @angular-package/spectre.css
    @include border($side: 'left');

    // bottom: $unit-2; // old spectre.css
    // bottom: get-var('unit-2'); // old @angular-package/spectre.css
    bottom: unit-var('2');
    content: '';
    display: block;
    left: 50%;
    position: absolute;
    // top: $unit-2; // old spectre.css
    // top: get-var('unit-2'); // old @angular-package/spectre.css
    top: unit-var('2');
    transform: translateX(-50%);
  }

  &[data-content]::after {
    left: 50%;
    // padding: $unit-1 0; // old spectre.css
    // padding: get-var('unit-1') 0; // old @angular-package/spectre.css
    @include padding('unit-1', 'unit-0');
    position: absolute;
    top: 50%;
    transform: translate(-50%, -50%);
  }
}
