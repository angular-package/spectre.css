// Variables.
@use 'variables/core' as *;

// Functions.
@use 'functions/color/color.function' as *;
@use 'functions/var/get-var.function' as *;
@use 'functions/var/unit-var.function' as *;

// Mixins.
@use 'mixins/color/color.mixin' as *;
@use 'mixins/color/background.mixin' as *;
@use 'mixins/margin.mixins' as *;
@use 'mixins/z-index.mixin' as *;

// Bars
.#{$class-prefix}bar {
  display: flex;
  flex-wrap: nowrap;
  width: 100%;
  height: unit-var('4');
  border-radius: get-var('border-radius');
  @include background('bg-dark');

  &.bar-sm {
    height: unit-var('1');
  }

  // TODO: attr() support
  .bar-item {
    position: relative;
    display: block;
    flex-shrink: 0;
    width: 0;
    height: 100%;
    line-height: unit-var('4'); // old @angular-package/spectre.css
    @include background('primary');
    @include color('light');
    font-size: get-var('font-size', $suffix: 'sm');
    text-align: center;

    &:first-child {
      border-bottom-left-radius: get-var('border-radius');
      border-top-left-radius: get-var('border-radius');
    }
    &:last-child {
      flex-shrink: 1;
      border-bottom-right-radius: get-var('border-radius');
      border-top-right-radius: get-var('border-radius');
    }
  }
}

// Slider bar
.bar-slider {
  position: relative;
  height: get-var('border-width', $suffix: 'lg');
  @include margin(('layout-spacing', true), 'unit-0');

  .bar-item {
    position: absolute;
    left: 0;
    padding: 0;
    &:not(:last-child):first-child {
      @include z-index('0');
      @include background('bg-dark');
    }
  }

  .bar-slider-btn {
    // Position.
    position: absolute;
    top: 50%;
    right: 0;

    // Size.
    width: unit-var('3');
    height: unit-var('3'); // old @angular-package/spectre.css
    padding: 0;

    transform: translate(50%, -50%);

    // Border.
    border: 0;
    border-radius: 50%;

    @include background('primary');

    &:active {
      box-shadow: 0 0 0 0.1rem color('primary');
    }
  }
}
