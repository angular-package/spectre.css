// Sass.
@use 'sass:list';
@use 'sass:map';
@use 'sass:meta';

// Functions.
// @use '../../compare.function' as *;
// @use '../../map/map-get-default.function' as *;
// @use '../../map/values-map.function' as *;
// @use '../index/list-index.function' as *;
// @use '../index/list-type-index.function' as *;
@use '../is/is-list-length.function' as *;
@use 'list-nth-default.function' as *;

// Status: DONE
// The `list-range-nth()` function.
@function list-range-nth($list, $from, $to, $default: null) {
  $result: ();
  @if is-list-length($list, 0) {
    @for $i from pick-range($from, $list) through pick-range($to, $list) {
      @if $i != 0 {
        $result: list.append($result, list-nth-default($list, $i, $default), $separator: list.separator($list));
      }
    }
  }
  @return $result;
}

// The `pick-range()` function.
@function pick-range($range, $list) {
  @if list.index((last, length), $range) {
    $range: list.length($list);
  } @else if list.index((first, start), $range) {
    $range: 1;
  }
  @return $range;
}

// Private `-get-range()` function.
// @function -get-range($range, $list) {
//   @if is-list-length($range, 1) {
//     // Type of.
//     @if list.index($range, type) { // TODO:
//       $range: list-type-index($list, $range);

//     // Value.
//     } @else {
//       @return list-nth-default(list-index($list, $range), 1, 0);
//     }

//   } @else if type-of($range) == string {
//     @if $range == length {
//       $range: list.length($list);
//     }
//   }
//   @return $range;
// }

// Examples.
// From - To
// @debug list-range-nth(('a', 'b', 'c', 'd', 'e', 'f'), 2, 4); // "b", "c", "d"
// @debug list-range-nth(('a', 'b', 'c', 'd', 'e', 'f'), 2, -1); // "b", "a", "f"
// @debug list-range-nth(('a', 'b', 'c', 'd', 'e', 'f'), -1, 1); // "f", "a"
// @debug list-range-nth(('a', 'b', 'c', 'd', 'e', 'f'), -6, -2); // "a", "b", "c", "d", "e"
// @debug list-range-nth(('a', 'b', 'c', 'd', 'e', 'f'), 4, -4); // "d", "c", "b", "a", "f", "e", "d", "c"
// @debug list-range-nth(('a', 'b', 'c', 'd', 'e', 'f'), 4, 9); // "d", "e", "f", null, null, null

// From: number - To: string
// @debug list-range-nth(('a', 'b', 'c', 'd', 'e', 'f'), -4, length); // "c", "d", "e", "f", "a", "b", "c", "d", "e", "f"
// @debug list-range-nth(('a', 'b', 'c', 'd', 'e', 'f'), -4, last); // "c", "d", "e", "f", "a", "b", "c", "d", "e", "f"

// @debug list-range-nth(('a', 'b', 'c', 'd', '.', 'e', '.', 'f'), 1, (any, ('==', '.'))); // "a", "b", "c", "d", "."
// @debug list-range-nth(('a', 'b', 'c', 'd', '.', 'e', '.', 'f'), 1, (any, ('==', '.'), -1)); // "a", "b", "c", "d"
// @debug list-range-nth(('a', 'b', 'c', 'd', '.', 'e', '.', 'f'), (any, ('==', 'b')), (any, ('==', '.'))); // "b", "c", "d", "."
// @debug list-range-nth(('a', 'bold king purple', 'c', 'd', '.', 'e', '.', 'f'), (any, ('~=', 'bold king')), (any, ('==', '.'))); // "b", "c", "d", "."
// @debug list-range-nth(('a', 'bold king purple', 'c', 'd', '.', 'e', '.', 'f'), (any, ('~=', 'bold king'), +1), (any, ('==', '.'), -1)); // "c", "d",

// From: string to To: number
// last 2
// @debug list-range-nth(('a', 'b', 'c', 'd', 'e', 'f'), -1, -2); // "f", "e"
// @debug list-range-nth(('a', 'b', 'c', 'd', 'e', 'f'), length, -4); // "f", "e", "d", "c", "b", "a", "f", "e", "d", "c"
// @debug list-range-nth(('a', 'b', 'c', 'd', 'e', 'f'), first, -4); // "a", "f", "e", "d", "c"
// @debug list-range-nth(('a', 'b', 'c', 'd', 'e', 'f'), start, -4); // "a", "f", "e", "d", "c"

// --- Number
// $-number: (1, '49 bold', 432, 313, 43, 132, 423, 89, 127, 2, 4, '213');
// @debug list-range-nth($-number, (any, ('>', 400)), (any, ('==', 127))); // 432, 313, 43, 132, 423, 89, 127
// @debug list-range-nth($-number, (any, ('~=', '49')), (any, ('==', 127))); // "49 bold", 432, 313, 43, 132, 423, 89, 127
// @debug list-range-nth($-number, (any, ('>', 400)), (any, ('==', string), type)); // 432, 313, 43, 132, 423, 89, 127
