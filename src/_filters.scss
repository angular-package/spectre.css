// Functions.
// @use 'functions/color' as *; // old @angular-package/spectre.css
@use 'functions/get-var' as *;

// Mixins.
@use 'mixins/color/background.mixin' as *;
@use 'mixins/color/color.mixin' as *;
@use 'mixins/margin.mixins' as *;

// Filters
// The number of filter options
$filter-number: 8 !default;

%filter-checked-nav {
  // background: $primary-color; // old spectre.css
  // background: color('primary-color'); // old @angular-package/spectre.css
  @include background('primary');
  // color: $light-color; // old spectre.css
  // color: color('light-color'); // old @angular-package/spectre.css
  @include color('light');
}

%filter-checked-body {
  display: none;
}

.filter {
  .filter-nav {
    // margin: $layout-spacing 0; // old spectre.css
    // margin: get-var('layout-spacing', $unit: true) 0; // old @angular-package/spectre.css
    @include margin(('layout-spacing', true), 0);
  }

  .filter-body {
    display: flex;
    flex-wrap: wrap;
  }

  .filter-tag {
    @for $i from 0 through ($filter-number) {
      &#tag-#{$i}:checked ~ .filter-nav .chip[for="tag-#{$i}"] {
        @extend %filter-checked-nav;
      }
    }

    @for $i from 1 through ($filter-number) {
      &#tag-#{$i}:checked ~ .filter-body .filter-item:not([data-tag~="tag-#{$i}"]) {
        @extend %filter-checked-body;
      }
    }
  }
}
