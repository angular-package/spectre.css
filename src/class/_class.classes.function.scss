// Sass.
@use 'sass:list';

// Variables.
@use '../variables/core' as *;

// Functions.
@use '../selector/selector.class.function' as selector;

// Status: DONE
// The `classes()` function.
@function classes($name, $variants: (), $selector: (), $dictionary: ()) {
  @if list.length($variants) > 0 {
    $i: 1;
    @each $variant in $variants {
      $variants: list.set-nth($variants, $i, selector.class(list.join($name, $variant), $selector, $dictionary));
      $i: $i + 1;
    }
    @return $variants;
  }
  @return selector.class($name, $dictionary, $selector);
}

// Examples.
// @debug classes(border width); // (.border-width,)

// variants
// @debug classes(border width, (xl, lg, md, sm, xs)); // (.border-width-xl,), (.border-width-lg,), (.border-width-md,), (.border-width-sm,), (.border-width-xs,)

// variants + parent
// @debug classes('&' border width, (xl, lg, md, sm, xs)); // (&.borderwidthxl,), (&.borderwidthlg,), (&.borderwidthmd,), (&.borderwidthsm,), (&.borderwidthxs,)
// @debug classes('&border' width, (xl, lg, md, sm, xs)); // (&.border-width-xl,), (&.border-width-lg,), (&.border-width-md,), (&.border-width-sm,), (&.border-width-xs,)

// variants + parent + selector
// @debug classes(border width, (xl, lg, md, sm, xs), '&:hover'); // (.border-width-xl:hover,), (.border-width-lg:hover,), (.border-width-md:hover,), (.border-width-sm:hover,), (.border-width-xs:hover,)

// variants + parent + selector + dictionary
// @debug classes(border width, (xl, lg, md, sm, xs), '&:hover', (border: b, width: w)); // (.b-w-xl:hover,), (.b-w-lg:hover,), (.b-w-md:hover,), (.b-w-sm:hover,), (.b-w-xs:hover,)
// @debug classes(border width, (xl, lg, md, sm, xs), '&:hover', (border: b)); // (.b-width-xl:hover,), (.b-width-lg:hover,), (.b-width-md:hover,), (.b-width-sm:hover,), (.b-width-xs:hover,)
