// Functions.
@use 'type/list-has-type.function' as *;
@use 'value/list-has-values.function' as *;

// Status: DONE
// The `list-has-bool()` function.
// ? $occurrence: all any only
// ? $operator: == !=
@function list-has-bool($list, $occurrence: any, $operator: null, $bools...) {
  $has: false;
  @if type-of($operator) == string {
    $has: if(
      list-has-type($bools, only, '==', bool),
      list-has-values($list, $occurrence, $operator, $bools...),
      false
    );
  } @else {
    $has: list-has-type($list, $occurrence, '==', bool);
  }
  @return $has;
}

// Examples.
// any
// @debug list-has-bool(('a', 'b', 'c')); // false
// @debug list-has-bool(('a', 'b', 'c', true)); // true
// @debug list-has-bool(('a', 'b', false, 'c'), any); // true
// @debug list-has-bool(('a', 'b', 'c'), any, '==', true); // false
// @debug list-has-bool(('a', 'b', 'c'), any, '==', false); // false

// all
// @debug list-has-bool((true, true, false, false), all, '==', true, false); // true
// @debug list-has-bool((true, true, true, true), all, '==', true); // true
// @debug list-has-bool((false, false, false, false), all, '==', false); // true
// @debug list-has-bool((true, true, true, true), all, '==', true, false); // false
// @debug list-has-bool((false, false, false, false), all, '==', true); // false
// @debug list-has-bool((true, true, true, true), all, '==', false); // false

// only
// @debug list-has-bool(('a', 'b', 'c'), only); // false
// @debug list-has-bool(('a', 'b', false, 'c'), only); // false
// @debug list-has-bool((true, true, false, false), only); // true
// @debug list-has-bool((true, true, true, true), only, '==', true); // true
// @debug list-has-bool((false, false, false, false), only, '==', false); // true
// @debug list-has-bool((true, true, false, false), only, '!=', false); // false
// @debug list-has-bool((true, true, true, true), only, '!=', false); // true
