// Functions.
@use 'var.name.function' as *;

// Status: DONE
// The `css()` function returns the CSS variable of the given `$name`, `$backup` value and optional `$dictionary`.
// `$name` structure `--#{$prefix}#{$separator}#{$name}#{$separator}#{$suffix}`
@function css($name, $backup: null, $dictionary: ()) {
  @return if($backup, var(name($name, $dictionary), $backup), var(name($name, $dictionary)));
}

// Examples.
// @debug css(layout spacing); // var(--s-layout-spacing)
// @debug css(layout spacing 1); // var(--s-layout-spacing-1)

// backup
// @debug css(layout spacing, 250px); // var(--s-layout-spacing, 250px)

// dictionary
// @debug css(layout spacing, 250px, (layout: lay, spacing: spa)); // var(--s-lay-spa, 250px)
// @debug css(- b o r d e r, 250px, (separator: '')); // var(--s-border, 250px)
// @debug css(- b o r d e r '-', 250px, (separator: '', prefix: spectre, suffix: width)); // var(--spectre-border-width, 250px)
