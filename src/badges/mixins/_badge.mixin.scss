// Variables.
@use '../../buttons/variables' as *;
@use '../../variables/core' as *;

// Functions.
@use '../../module/module.class.function' as *;

// Modules.
@use '../../color';

// Mixins.
@use '../../mixins/font-size.mixin' as *;
@use '../../mixins/z-index.mixin' as *;

// Status: DONE
// The `badge()` mixin.
@mixin badge($class: (), $pseudo-class: (), $dictionary: ()) {
  #{class(badge, $class, $pseudo-class, $dictionary)} {
    position: relative;
    white-space: nowrap;

    &[data-badge],
    &:not([data-badge]) {
      &::after {
        content: attr(data-badge);
        display: inline-block;
        border-radius: 0.5rem;
        @include color.background(primary);

        background-clip: padding-box;
        @include color.color(light);

        box-shadow: 0 0 0 0.1rem color.color(bg light);
        transform: translate(-0.05rem, -0.5rem);
      }
    }

    &[data-badge] {
      &::after {
        min-width: 0.9rem;
        height: 0.9rem;
        padding: 0.1rem 0.2rem;
        @include font-size(sm);

        line-height: 1;
        text-align: center;
        white-space: nowrap;
      }
    }

    &:not([data-badge]),
    &[data-badge=''] {
      &::after {
        width: 6px;
        min-width: 6px;
        height: 6px;
        padding: 0;
      }
    }

    // Badges for Buttons
    #{class(button, '&', '&::after', $dictionary)} {
      position: absolute;
      top: 0;
      right: 0;
      transform: translate(50%, -50%);
    }

    // Badges for Avatars
    #{class(avatar, '&', '&::after', $dictionary)} {
      position: absolute;
      top: 14.64%;
      right: 14.64%;
      @include z-index(1);

      transform: translate(50%, -50%);
    }
  }
}
