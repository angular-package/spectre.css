// Sass.
@use 'sass:list';

// Functions.
@use '../has/type/list.has-type.function' as *;

// Status: DONE
// The `remove-string()` function.
@function remove-string($list, $string...) {
  @if list.length($list) > 0 and has-type($list, any, '==', string) {
    $result: ();
    @if list.length($list) > 0 {
      @each $element in $list {
        @if not (type-of($element) == string) or
          (list.length($string) > 0 and type-of($element) == string and not list.index($string, $element)) {
          $result: list.append($result, $element, list.separator($list));
        }
      }
    }
    @return $result;
  }
  @return $list;
}

// Examples.
// @debug remove-string(('a', 'b', 'c')); // Returns `()`
// @debug remove-string(('a', 'b', 'c', ('d', 'e', 'f'))); // Returns (("d", "e", "f"),)
// @debug remove-string(('a', 'b', 'c', ('d', 'e', 'f'), 'g', 'h', (1, 2, 3))); // Returns ("d", "e", "f"), (1, 2, 3)
// @debug remove-string(('a', 'b', 'c', ('d', 'e', 'f'), 'g', 'h', (1, 2, 3)), 'b', 'h'); // Returns ("a", "c", ("d", "e", "f"), "g", (1, 2, 3))
// @debug remove-string(('a', 'b', 'c', ('d', (1, 2, 3, (4, 5, 6)), 'e', 'f'))); // Returns (("d", (1, 2, 3, (4, 5, 6)), "e", "f"),)
