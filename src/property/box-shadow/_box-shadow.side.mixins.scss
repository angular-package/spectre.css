// Sass.
@use 'sass:map';

// Variables.
@use '../../variables/box-shadow.var' as *;

// Mixins.
@use 'box-shadow.mixin' as *;

// Status: DONE
@mixin side(
  $side,
  $size: map.get($box-shadow, size),
  $color: map.get($box-shadow, color),
  $alpha: map.get($box-shadow, alpha)
) {
  $box-shadow: null;
  @if $side == top {
    $box-shadow: 0 ($size * -1) $size ($size * -1);
  } @else if $side == right {
    $box-shadow: $size 0 $size ($size * -1);
  } @else if $side == bottom {
    $box-shadow: 0 $size $size ($size * -1);
  } @else if $side == left {
    $box-shadow: ($size * -1) 0 $size ($size * -1);
  }
  @if $box-shadow {
    @include box-shadow($box-shadow, $color, $alpha);
  } @else {
    @error "Unknown side #{$side}.";
  }
}

@mixin top(
  $size: map.get($box-shadow, size),
  $color: map.get($box-shadow, color),
  $alpha: map.get($box-shadow, alpha)
) {
  @include side(top, $size, $color, $alpha);
}

@mixin right(
  $size: map.get($box-shadow, size),
  $color: map.get($box-shadow, color),
  $alpha: map.get($box-shadow, alpha)
) {
  @include side(right, $size, $color, $alpha);
}

@mixin bottom(
  $size: map.get($box-shadow, size),
  $color: map.get($box-shadow, color),
  $alpha: map.get($box-shadow, alpha)
) {
  @include side(bottom, $size, $color, $alpha);
}

@mixin left(
  $size: map.get($box-shadow, size),
  $color: map.get($box-shadow, color),
  $alpha: map.get($box-shadow, alpha)
) {
  @include side(left, $size, $color, $alpha);
}

// Examples.
// div {
  // @include side(top); // box-shadow: 0 -10px 10px -10px gray;
  // @include side(right); // box-shadow: 10px 0 10px -10px gray;
  // @include side(bottom); // box-shadow: 0 10px 10px -10px gray;
  // @include side(left); // box-shadow: -10px 0 10px -10px gray;

  // size
  // @include side(top, 20px); // box-shadow: 0 -20px 20px -20px gray;

  // size + color
  // @include side(top, 20px, secondary); // box-shadow: 0 -20px 20px -20px var(--s-secondary-color);

  // size + hsla color
  // @include side(top, 20px, secondary ':hsla'); // box-shadow: 0 -20px 20px -20px hsla(var(--s-secondary-color-h), var(--s-secondary-color-s), var(--s-secondary-color-l), var(--s-secondary-color-a));

  // size + hsla color + alpha
  // @include side(top, 20px, orange dark, 0.5); // box-shadow: 0 -20px 20px -20px hsla(var(--s-orange-color-dark-h), var(--s-orange-color-dark-s), var(--s-orange-color-dark-l), calc(var(--s-orange-color-dark-a) + 0.5));

  // size + color adjusted in order lightness alpha hue saturation
  // @include side(top, 20px, ((primary dark) 15% ':hsla')); // box-shadow: 0 -20px 20px -20px hsla(var(--s-primary-color-dark-h), var(--s-primary-color-dark-s), calc(var(--s-primary-color-dark-l) + 15%), var(--s-primary-color-dark-a));
  // @include side(top, 20px, ((primary dark) 15%: hsla)); // box-shadow: 0 -20px 20px -20px hsla(var(--s-primary-color-dark-h), var(--s-primary-color-dark-s), calc(var(--s-primary-color-dark-l) + 15%), var(--s-primary-color-dark-a));

  // size + color adjusted in map lightness, alpha
  // @include side(bottom, 20px, ((primary dark) (lightness: 15%, alpha: 0.5) ':hsla')); // box-shadow: 0 20px 20px -20px hsla(var(--s-primary-color-dark-h), var(--s-primary-color-dark-s), calc(var(--s-primary-color-dark-l) + 15%), calc(var(--s-primary-color-dark-a) + 0.5));
  // @include side(top, 20px, ((primary dark) (lightness: 15%, alpha: 0.9): hsla)); // box-shadow: 0 -20px 20px -20px hsla(var(--s-primary-color-dark-h), var(--s-primary-color-dark-s), calc(var(--s-primary-color-dark-l) + 15%), calc(var(--s-primary-color-dark-a) + 0.9));

  // @include top; // box-shadow: 0 -10px 10px -10px var(--s-gray-color);
  // @include top(20px); // box-shadow: 0 -20px 20px -20px var(--s-gray-color);

  // @include right; // box-shadow: 10px 0 10px -10px var(--s-gray-color);
  // @include right($color: orange dark); // box-shadow: 10px 0 10px -10px var(--s-orange-color-dark);

  // @include bottom; // box-shadow: 0 10px 10px -10px var(--s-gray-color);
  // @include bottom($alpha: 0.5); // box-shadow: 0 10px 10px -10px hsla(var(--s-gray-color-h), var(--s-gray-color-s), var(--s-gray-color-l), calc(var(--s-gray-color-a) + 0.5));

  // @include left; // box-shadow: -10px 0 10px -10px var(--s-gray-color);
// }
