// Modules.
@use '../list';

// Functions.
@use 'var.adjust.function' as *;
@use 'var.negative.function' as *;
@use 'var.unit.function' as *;

// Status: DONE
// The `get()` function.
@function get(
  $params,
  $adjust: null,
  $unit: false,
  $backup: null,
  $dictionary: ()
) {
  @if $params == auto or type-of($params) == number {
    @return $params;
  }

  $adjust: list.get-list($params) or $adjust;
  $negative: not (list.index($params, any, '==', '!') == null);
  $unit: list.get-bool($params) or $unit;
  @return negative(
    adjust(unit($params, $unit, $backup, $dictionary), $adjust),
    $negative
  );
}

// Examples.
// @debug get(layout spacing); // var(--s-layout-spacing)
// @debug get(layout spacing 1); // var(--s-layout-spacing-1)

// adjust
// @debug get(layout spacing, 1); // calc(var(--s-layout-spacing) + 1) @deprecated
// @debug get(layout spacing ('+' 1)); // calc(var(--s-layout-spacing) + 1)
// @debug get(layout spacing ('-' 1)); // calc(var(--s-layout-spacing) - 1)
// @debug get(layout spacing ('/' 1)); // calc(var(--s-layout-spacing) / 1)

// adjust negative
// @debug get('!' layout spacing); // calc(var(--s-layout-spacing) * -1)

// with rem unit
// @debug get(layout spacing true); // calc(var(--s-layout-spacing) * var(--s-unit-rem))

// negative + unit + adjust + backup
// @debug get('!' layout spacing true ('+' 5), $backup: 250px); // calc(((var(--s-layout-spacing, 250px) * var(--s-unit-rem)) + 5) * -1)
