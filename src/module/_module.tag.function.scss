// Sass.
@use 'sass:list';
@use 'sass:map';

// Modules.
// @use '../dictionary';
@use '../selector';

// Functions.
@use 'module.dictionary.function' as *;

// Status: TODO: does not work good
// The `tag()` function.
// @param `$tag`
// @param `$name`
// @param `$class`
// @param `$selector`
// @param `$module-dictionary`
// @param `$dictionary`
@function tag(
  $tag,
  $name,
  $class: (),
  $selector: (),
  $module-dictionary: null,
  $dictionary: (),
) {
  @return selector.tag(
    $tag,
    list.join($name, $class, space),
    $selector,
    map.merge(
      if($module-dictionary, dictionary.get(class, $module-dictionary, ()), dictionary($name, class)),
      dictionary.get(class, $dictionary) or dictionary.get(null, $dictionary, ())
    )
  );
}

// Examples.
// tag span + module class name
// @debug tag(span, label); // (span .label,)
// @debug tag(span, '&label'); // (span.label,)

// tag span + module class name + additional class
// @debug tag(span, label, primary); // (span.label-primary,)

// multiple classes
// @debug tag(span, label, ((primary, secondary),)); // span .label-primary, span .label-secondary
// @debug tag(span, '&label', ((primary, secondary),)); // span.label-primary, span.label-secondary
// @debug tag(span, '&label', ((primary, secondary), xs)); // span.label-primary-xs, span.label-secondary-xs

// multiple classes + :hover, :active
// @debug tag(span, '&label', ((primary, secondary), xs), '&:hover, &:active'); // span.label-primary-xs:hover, span.label-primary-xs:active, span.label-secondary-xs:hover, span.label-secondary-xs:active

// BEM
// @debug tag(input, label__, ((primary, secondary), --disabled), $dictionary: (separator: null)); // input .label__primary--disabled, input .label__secondary--disabled
// @debug tag(input, '&label__', ((primary, secondary), --disabled), $dictionary: (separator: null)); // input.label__primary--disabled, input.label__secondary--disabled
