// Variables.
@use '../variables/core' as *;

// Functions.
@use 'functions/parallax-class.function' as *;

// @use '../functions/class/class.function' as *;
@use '../functions/color/color.function' as *;
@use '../functions/var/get-var.function' as *;
@use '../functions/var/var-negative.function' as *;

// Mixins.
@use 'mixins/parallax-dir.mixin' as *;
@use '../mixins/color/color.mixin' as *;
@use '../mixins/box-shadow.mixins' as *;
@use '../mixins/transition.mixin' as *;
@use '../mixins/z-index.mixin' as *;
@use '../mixins/z-index.mixin' as *;

// Mixin: Parallax direction
// .#{$class-prefix}parallax {
// #{class($parallax-name)} {
#{parallax-class()} {
  position: relative;

  // Display.
  display: block;

  // Size.
  width: auto;
  height: auto;

  // .parallax-content {
  // #{class(($parallax-name, 'content'))} {
  #{parallax-class('content')} {
    // Size.
    width: 100%;
    height: auto;
    @include shadow-variant(1rem);
    @include transition(('all', 0.2s, ease));

    transform: perspective(get-var(('parallax', 'perspective')));
    transform-style: preserve-3d;

    &::before {
      content: '';

      // Position.
      position: absolute;
      top: 0;
      left: 0;

      // Display.
      display: block;

      // Size.
      width: 100%;
      height: 100%;
    }
  }

  // .parallax-front {
  // #{class(($parallax-name, 'front'))} {
  #{parallax-class('front')} {
    position: absolute;
    top: 0;
    left: 0;
    @include z-index('0');

    display: flex;
    justify-content: center;
    align-items: center;
    width: 100%;
    height: 100%;
    @include color('light');

    text-align: center;
    text-shadow: 0 0 20px color('dark', $alpha: 0.75);

    @include transition((transform, 0.2s));

    transform: translateZ(get-var(('parallax', 'offset', 'z'))) scale(get-var(('parallax', 'scale')));
  }

  // .parallax-top-left {
  // #{class(($parallax-name, 'top', 'left'))} {
  #{parallax-class(('top', 'left'))} {
    @include parallax-dir;

    top: 0;
    left: 0;

    // &:focus ~ .parallax-content,
    // &:focus ~ #{class(($parallax-name, 'content'))},
    &:focus ~ #{parallax-class('content')},
    // &:hover ~ .parallax-content {
    // &:hover ~ #{class(($parallax-name, 'content'))} {
    &:hover ~ #{parallax-class('content')} {
      transform: perspective(get-var(('parallax', 'perspective'))) rotateX(get-var(('parallax', 'deg'))) rotateY(var-negative(get-var(('parallax', 'deg'))));

      &::before {
        background: linear-gradient(135deg, color(('parallax-fade-color', ('alpha': 0.35))) 0%, transparent 50%);
      }

      // .parallax-front {
      // #{class(($parallax-name, 'front'))} {
      #{parallax-class('front')} {
        transform: translate3d(get-var(('parallax', 'offset')), get-var(('parallax', 'offset')), get-var(('parallax', 'offset', 'z'))) scale(get-var(('parallax', 'scale')));
      }
    }
  }

  // .parallax-top-right {
  // #{class(($parallax-name, 'top', 'right'))} {
  #{parallax-class(('top', 'right'))} {
    @include parallax-dir;

    top: 0;
    right: 0;

    // &:focus ~ .parallax-content,
    // &:focus ~ #{class(($parallax-name, 'content'))},
    &:focus ~ #{parallax-class('content')},
    // &:hover ~ .parallax-content {
    // &:hover ~ #{class(($parallax-name, 'content'))} {
    &:hover ~ #{parallax-class('content')} {
      transform: perspective(get-var(('parallax', 'perspective'))) rotateX(get-var(('parallax', 'deg'))) rotateY(get-var(('parallax', 'deg')));

      &::before {
        background: linear-gradient(-135deg, color(('parallax-fade-color', ('alpha': 0.35))) 0%, transparent 50%);
      }

      // .parallax-front {
      // #{class(($parallax-name, 'front'))} {
      #{parallax-class('front')} {
        transform: translate3d(var-negative(get-var(('parallax', 'offset'))), get-var(('parallax', 'offset')), get-var(('parallax', 'offset', 'z'))) scale(get-var(('parallax', 'scale')));
      }
    }
  }

  // .parallax-bottom-left {
  // #{class(($parallax-name, 'bottom', 'left'))} {
  #{parallax-class(('bottom', 'left'))} {
    @include parallax-dir;

    bottom: 0;
    left: 0;

    // &:focus ~ .parallax-content,
    // &:focus ~ #{class(($parallax-name, 'content'))},
    &:focus ~ #{parallax-class('content')},
    // &:hover ~ .parallax-content {
    // &:hover ~ #{class(($parallax-name, 'content'))} {
    &:hover ~ #{parallax-class('content')} {
      transform: perspective(get-var(('parallax', 'perspective'))) rotateX(var-negative(get-var(('parallax', 'deg')))) rotateY(var-negative(get-var(('parallax', 'deg'))));

      &::before {
        background: linear-gradient(45deg, color(('parallax-fade-color', ('alpha': 0.35))) 0%, transparent 50%);
      }

      // .parallax-front {
      // #{class(($parallax-name, 'front'))} {
      #{parallax-class('front')} {
        transform: translate3d(get-var(('parallax', 'offset')), var-negative(get-var(('parallax', 'offset'))), get-var(('parallax', 'offset', 'z'))) scale(get-var(('parallax', 'scale')));
      }
    }
  }

  // .parallax-bottom-right {
  // #{class(($parallax-name, 'bottom', 'right'))} {
  #{parallax-class(('bottom', 'right'))} {
    @include parallax-dir;

    right: 0;
    bottom: 0;

    // &:focus ~ .parallax-content,
    // &:focus ~ #{class(($parallax-name, 'content'))},
    &:focus ~ #{parallax-class('content')},
    // &:hover ~ .parallax-content {
    // &:hover ~ #{class(($parallax-name, 'content'))} {
    &:hover ~ #{parallax-class('content')} {
      transform: perspective(get-var(('parallax', 'perspective'))) rotateX(var-negative(get-var(('parallax', 'deg')))) rotateY(get-var(('parallax', 'deg')));

      &::before {
        background: linear-gradient(-45deg, color(('parallax-fade-color', ('alpha': 0.35))) 0%, transparent 50%);
      }

      // .parallax-front {
      // #{class(($parallax-name, 'front'))} {
      #{parallax-class('front')} {
        transform: translate3d(var-negative(get-var(('parallax', 'offset'))), var-negative(get-var(('parallax', 'offset'))), get-var(('parallax', 'offset', 'z'))) scale(get-var(('parallax', 'scale')));
      }
    }
  }
}
