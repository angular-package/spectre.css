// Sass.
@use 'sass:list';
@use 'sass:map';
@use 'sass:meta';

// Functions.
@use 'dictionary.get.function' as *;

// Modules.
@use 'translate';

// Status: DONE
// The `dictionary.translate()` function.
@function translate($words, $dictionary: ()) {
  @return meta.call(map.get((
    list: meta.get-function(list, $module: translate),
    map: meta.get-function(map, $module: translate),
    string: meta.get-function(string, $module: translate),
  ), meta.type-of($words)), $words, get(list.nth($dictionary, 2), list.nth($dictionary, 1)) or $dictionary);
}

// Examples.
$-dictionary: (
  general: (word: s≈Çowo, (wrapper, wrap): owijka, (technology, technologia): tech),
  class: (calendars: (calendar: cal), labels: (label: lab))
);

// List.
// @debug translate((wrapper, technology), ($-dictionary, 'general')); // owijka, tech
// @debug translate((wrapper, technology) color, $-dictionary general); // (owijka, tech) color

// Map.
// @debug translate((word: wrapper), $-dictionary general); // (word: owijka)
// @debug translate((limit: first), ((first, start): 1, (last, length, end): 50)); // (limit: 1)

// String.
// @debug translate(wrapper, $-dictionary general); // owijka

// Different dictionary.
// @debug translate(calendar, $-dictionary (class, calendars)); // cal
