// Mixins.
@use 'class.variant.mixin' as *;

// Examples.
// @include variant((padding: unit 1)) using($property, $value) {
//   #{$property}: #{$value};
// }
// .padding {
//   padding: unit 1;
// }

// @include variant((padding: (unit 1, unit 2 '!important'))) using($property, $value) {
//   #{$property}: #{$value};
// }
// .padding {
//   padding: unit 1;
// }
// .padding {
//   padding: unit 2 !important;
// }

// @include variant((padding: (unit 1) (unit 2))) using($property, $value) {
//   #{$property}: #{$value};
// }
// .padding {
//   padding: unit 1 unit 2;
// }

// @include variant((padding: unit 1, margin: unit 2)) using($property, $value) {
//   #{$property}: #{$value};
// }
// .padding {
//   padding: unit 1;
// }
// .margin {
//   margin: unit 2;
// }

// @include variant((padding: unit 1, margin: unit 2)) using($property, $value) {
//   #{$property}: #{$value};
// }
// .padding {
//   padding: unit 1;
// }
// .margin {
//   margin: unit 2;
// }

// @include variant((padding-bottom: unit 1)) using($property, $value) {
//   #{$property}: #{$value};
// }
// .padding-bottom {
//   padding-bottom: unit 1;
// }

// @include variant((padding (small, large): unit 1)) using($property, $value) {
//   padding: #{$value};
// }
// .padding-small, .padding-large {
//   padding: unit 1;
// }

// @include variant(((outline, inline) padding: unit 1)) using($property, $value) {
//   padding: #{$value};
// }
// .outline-padding, .inline-padding {
//   padding: unit 1;
// }

// @include variant((padding: (unit 1, unit 2))) using($property, $value) {
//   #{$property}: #{$value};
// }
// .padding {
//   padding: unit 1;
// }
// .padding {
//   padding: unit 2;
// }

// @include variant(((padding, margin): (unit 1, unit 2))) using($property, $value) {
//   #{$property}: #{$value};
// }
// .padding {
//   padding: unit 1;
// }
// .margin {
//   margin: unit 1;
// }
// .padding {
//   padding: unit 2;
// }
// .margin {
//   margin: unit 2;
// }

// TODO: Here
// @include variant((padding test: (size one: unit 1))) using($property, $value-class, $value) {
//   #{$property}: #{$value};
// }


// @include variant((padding: ((unit 1) (unit 2)))) using($property, $value) {
//   #{$property}: #{$value};
// }
// .padding {
//   padding: unit 1 unit 2;
// }

// @include variant(((padding, margin): ((unit 1) (unit 2)))) using($property, $value) {
//   #{$property}: #{$value};
// }
// .padding {
//   padding: unit 1 unit 2;
// }
// .margin {
//   margin: unit 1 unit 2;
// }

// @include variant(((padding, margin): (1: unit 1, 2: unit 2))) using($property, $value-class, $value) {
//   #{$property}: #{$value};
// }
// .padding-1 {
//   padding: unit 1;
// }
// .margin-1 {
//   margin: unit 1;
// }
// .padding-2 {
//   padding: unit 2;
// }
// .margin-2 {
//   margin: unit 2;
// }


// @include variant(((padding, margin): ((): (unit 1, unit 2)))) using($class, $value-class, $value) {
//   #{$class}: #{$value};
// }
// .padding {
//   padding: unit 1, unit 2;
// }
// .margin {
//   margin: unit 1, unit 2;
// }


// @include variant(((padding, margin): ((top): (unit 1, unit 2)))) using($class, $value-class, $value) {
//   #{$class}: #{$value};
// }
// .padding-top {
//   padding: unit 1, unit 2;
// }
// .margin-top {
//   margin: unit 1, unit 2;
// }
// .padding-bottom {
//   padding: unit 1;
// }
// .padding-top {
//   padding: unit 2;
// }
// .padding-bottom {
//   padding: unit 2;
// }
// .margin-top {
//   margin: unit 1;
// }
// .margin-bottom {
//   margin: unit 1;
// }
// .margin-top {
//   margin: unit 2;
// }
// .margin-bottom {
//   margin: unit 2;
// }

// @include variant(((padding, margin): ((top, bottom): (2: (unit 1) (unit 4), 3: unit 2)))) using($class, $side, $value-class, $value) {
//   #{$class}-#{$side}: #{$value};
// }
// .padding-top-2 {
//   padding-top: unit 1 unit 4;
// }
// .padding-top-3 {
//   padding-top: unit 2;
// }
// .padding-bottom-2 {
//   padding-bottom: unit 1 unit 4;
// }
// .padding-bottom-3 {
//   padding-bottom: unit 2;
// }
// .margin-top-2 {
//   margin-top: unit 1 unit 4;
// }
// .margin-top-3 {
//   margin-top: unit 2;
// }
// .margin-bottom-2 {
//   margin-bottom: unit 1 unit 4;
// }
// .margin-bottom-3 {
//   margin-bottom: unit 2;
// }

// @include variant((border: ((top left, bottom right): ( (xs, sm): red, (md, lg): green )))) using($class, $side, $value-class, $value) {
//   border-color: #{$value};
// }
// .border-top-left-md, .border-top-left-lg {
//   border-color: green;
// }
// .border-bottom-right-xs, .border-bottom-right-sm {
//   border-color: red;
// }
// .border-bottom-right-md, .border-bottom-right-lg {
//   border-color: green;
// }

// @include variant((border: ((): ( (xs, sm): red, (md, lg): green )))) using($class, $side, $value-class, $value) {
//   border-color: #{$value};
// }
// .border-xs, .border-sm {
//   border-color: red;
// }
// .border-md, .border-lg {
//   border-color: green;
// }





// ------
// class variant
// @include variant(((padding top, margin bottom): ((size 1,  size 2): (15px, 30px)))) using($resolved...) {
//   @debug $resolved;
//   font: 100;
// }

// @include variant(((padding top, margin bottom): ((left radius, right): ((size 1,  size 2): 15px)))) using($resolved...) {
//   @debug $resolved;
//   font: 100;
// }

// @include variant(((padding top, margin bottom): ((size 1,  size 2): 15px))) using($resolved...) {
//   @debug $resolved;
//   font: 100;
// }

// @include variant(((padding top, margin bottom): ((1, 2): 15px))) using($resolved...) {
//   @debug $resolved;
//   font: 100;
// }

// @include variant(((padding top, margin bottom): (1: 15px))) using($resolved...) {
//   @debug $resolved;
//   font: 100;
// }

// @include variant((padding: (1: 1px))) using($resolved...) {
//   @debug $resolved;
//   font: 100;
// }


// value variant
// @include variant(((padding bottom, padding top): (unit 1, unit 2))) using($resolved...) {
//   @debug $resolved;
//   font: 100;
// }

// @include variant(((padding bottom): (unit 1, unit 2))) using($resolved...) {
//   @debug $resolved;
//   font: 100;
// }

// @include variant(((padding bottom): unit 1)) using($resolved...) {
//   font: 100;
// }

// @include variant(((padding, margin): unit 1)) using($resolved...) {
//   font: 100;
// }


// @include variant((padding test: (size one: unit 1))) using($property, $value-class, $value) {
//   #{$property}: #{$value};
// }

