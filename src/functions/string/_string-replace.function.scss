// Sass.
@use 'sass:string';

// Status: DONE
// The `string-replace()` function.
@function string-replace($string, $replacements...) {
  @each $occurrence, $replace, $replacement in $replacements {
    @each $value in $replace {
      $index: string.index($string, $value);
      @while not ($index == null) {
        @if type-of($index) == number {
          $string-left: string.slice($string, 1, ($index - 1));
          $string-right: string.slice(
            $string,
            ($index + (string.length($value))),
            (string.length($string))
          );
          $string: $string-left + $replacement + $string-right;
          @if $occurrence == first {
            $index: null;
          }
        }
        @if $occurrence == all or ($occurrence == first and not ($index == null)) {
          $index: string.index($string, $value);
        }
      }
    }
  }
  @return $string;
}

@function replace($string, $replacements...) {
  @return string-replace($string, $replacements...);
}

// Examples.
// single replacement first occurrence
// @debug string-replace('bold king is hairy', first 'bold' 'baloon'); // baloon king is hairy
// @debug string-replace('bold king is hairy', first 'bold' ''); //  king is  hairy
// @debug string-replace(':==', first ':' '');

// single replacement all occurrences
// @debug string-replace('bold king is bold hairy', all 'bold' ''); //  king is  hairy
// @debug string-replace('bold king is bold hairy', all 'bold' 'test'); // test king is test hairy

// multiple replacements
// @debug string-replace('bold king is hairy', first (bold is) ''); //  king  hairy
// @debug string-replace('bold king is hairy', first bold baloon, first king baloon); // baloon baloon is hairy
// @debug string-replace('bold king is hairy', first (bold king) baloon, first (is hairy) bold); // baloon baloon bold bold
// @debug string-replace('atmosphere bold bold bold king is hairy', first (king bold) baloon); // atmosphere baloon bold bold baloon is hairy
// @debug string-replace('atmosphere bold bold bold king is hairy', all (king bold) baloon); // atmosphere baloon baloon baloon baloon is hairy

// multiple replacements different occurrences
// @debug string-replace('atmosphere bold bold bold king is hairy', first bold clean, all (king bold) baloon); // atmosphere clean baloon baloon baloon is hairy
