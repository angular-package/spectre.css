// Sass.
@use 'sass:map';

// Variables.
@use '../../variables/core' as *;

// Functions.
@use '../../borders/functions/borders.width-var.function' as border;
@use '../../module/module.class.function' as *;

// Modules.
@use '../../color';
@use '../../var';

// Mixins.
@use '../../mixins/box-shadow' as *;
@use '../../mixins/margin';
@use '../../mixins/z-index.mixin' as *;

// Status:
// The `slider()` mixin.
@mixin slider($class: (), $pseudo-class: (), $dictionary: ()) {
  // Slider bar
  // .bar-slider {
  // #{class(($bar-name, 'slider'), $class: map.get($bar, 'class'))} {
  #{class(bar, $class slider, $pseudo-class, $dictionary)} {
    position: relative;

    // height: get-var('border-width', $suffix: 'lg');
    // height: get-var((('border', 'width', 'lg'),));
    height: border.width-var(lg);
    @include margin.margin((layout spacing true) (unit 0));

    // .bar-item {
    // #{class(($bar-name, 'item'), $class: map.get($bar, 'class'))} {
    #{class(bar, $class item, (), $dictionary)} {
      position: absolute;
      left: 0;
      padding: 0;

      &:not(:last-child):first-child {
        @include z-index(0);
        @include color.background(bg dark);
      }
    }

    // .bar-slider-btn {
    // #{class(($bar-name, 'slider', 'btn'), $class: map.get($bar, 'class'))} {
    #{class(bar, $class slider button, (), $dictionary)} {
      // Position.
      position: absolute !important;
      top: 50%;
      right: 0;

      // Size.
      width: var.unit-var(3);
      height: var.unit-var(3);
      padding: 0;

      // Border.
      border: 0;
      border-radius: 50%;
      @include color.background(primary);

      transform: translate(50%, -50%);

      &:active {
        // box-shadow: 0 0 0 0.1rem color.color(primary);
        @include box-shadow(0 0 0 0.1rem primary);
      }
    }
  }
}
