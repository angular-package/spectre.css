// Variables.
@use 'variables';

// Modules.
@use '../color';
@use '../module';
@use 'var';

// Status: TODO: change size to width
// The `borders.border()` function.
// @param `$width`
// @param `$adjust`
// @param `$style`
// @param `$color`
// @param `$dictionary`
// @returns
@function border(
  $width: md,
  $adjust: null,
  $style: null,
  $color: null,
  $dictionary: null
) {
  @return #{var.var(join(width, $width), $adjust, false, null, $dictionary)}
    #{if($style, $style, variables.$style)}
    #{color.color(if($color, $color, variables.$color), $dictionary: if($dictionary, $dictionary, module.dictionary(border, true, var)))};
}

// Examples.
// @debug border(); // var(--s-border-size-md) solid var(--s-border-color)

// width
// @debug border(sm); // var(--s-border-size-sm) solid var(--s-border-color)

// width adjust
// @debug border(sm, 15); // calc(var(--s-border-size-sm) + 15) solid var(--s-border-color)

// style
// @debug border(sm, null, dotted); // var(--s-border-size-sm) dotted var(--s-border-color)

// hsla color
// @debug border(sm, $color: border ':hsla'); // var(--s-border-size-sm) solid hsla(var(--s-border-color-h), var(--s-border-color-s), var(--s-border-color-l), var(--s-border-color-a))

// dictionary
// @debug border(basic small, null, dotted, $dictionary: (delimiter: '-', small: sm)); // var(--s-border-size-basic-sm) dotted var(--s-border-color)
