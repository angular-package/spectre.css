// Sass.
@use 'sass:list';
@use 'sass:meta';

// Functions.
@use '../../../compare.function' as *;
@use '../../is/is-list-length.function' as *;

// Status: DONE
// The `list-has-type()` function.
@function list-has-type($list, $occurrence, $type) {
  $has: false;
  @if is-list-length($list, '>', 0) {
    @if $occurrence == any {
      @each $element in $list {
        @if compare($element, ':==', $type) {
          @return true;
        }
      }
    } @else if $occurrence == only {
      $has: true;
      @each $element in $list {
        @if compare($element, ':!=', $type) {
          @return false;
        }
      }
    }
  }

  @return $has;
}

// Examples.
// any
// @debug list-has-type(('a', 'b', 'c'), any, string); // true
// @debug list-has-type(('a', 'b', 'c', 5123), any, number); // true
// @debug list-has-type(('a', null, 'b', 'c', 5123), any, null); // true
// @debug list-has-type(('a', ('b', 'c'), 5123), any, list); // true
// @debug list-has-type(('a', ('b': 'c'), 5123), any, map); // true
// @debug list-has-type(('a', 'b', 'c', 5123), any, list); // false

// only
// @debug list-has-type(('a', 'b', 'c'), only, string); // true
// @debug list-has-type(('a', 'b', 'c', 5123), only, number); // false
// @debug list-has-type(('a', null, 'b', 'c', 5123), only, null); // false
// @debug list-has-type(('a', ('b', 'c'), 5123), only, list); // false
// @debug list-has-type(('a', ('b': 'c'), 5123), only, map); // false

// null
// @debug list-has-type(('a', ('b': 'c'), 5123, null, '27', 27), any, null); // true
// @debug list-has-type(('a', ('b': 'c'), 5123, null, '27', 27), any, null); // true
// @debug list-has-type(('a', ('b': 'c'), 5123, false, '27', 27), any, null); // false
