// Sass.
@use 'sass:list';
@use 'sass:map';

// Modules.
@use '../../selector';
@use '../../scheme';

// Functions.
@use '../../functions/important.function' as *;

// Mixins.
@use 'color.property-color.mixin' as *;

// Status: REVIEW:
// The `scheme-color()` mixin contains the `color` style of the given `$color` CSS variable name without the prefix.
@mixin scheme-color(
  $scheme-color,
  $hue: null,
  $saturation: null,
  $lightness: null,
  $alpha: null,
  $backup: null,
  $important: false,
  $dictionary: (),
) {
  @if $scheme-color {
    @each $scheme, $property-color in $scheme-color {
      @if list.index(dark light normal, $scheme) {
        @if list.index(dark light, $scheme) {
          @media (prefers-color-scheme: $scheme) {
            @include property-color($property-color, $hue, $saturation, $lightness, $alpha, $backup, $important, $dictionary);
          }
        } @else {
          @include property-color($property-color, $hue, $saturation, $lightness, $alpha, $backup, $important, $dictionary);
        }
      }
    }
  }
}

// Examples.
// :host {
  // @include scheme-color((
  //   normal: (
  //     color: ((primary dark,) 15%: hsla),
  //     background: ((primary dark,) 15%: hsla)
  //   ),
  //   dark: (
  //     color: ((primary dark,) 15%: hsla),
  //     background: ((primary dark,) 15%: hsla)
  //   ),
  //   light: (
  //     color: ((primary dark,) 15%: hsla),
  //     background: ((primary dark,) 15%: hsla)
  //   ),
  // ));

  // :host {
  //   color: hsla(var(--s-primary-dark-h), var(--s-primary-dark-s), calc(var(--s-primary-dark-l) + 15%), var(--s-primary-dark-a));
  //   background: hsla(var(--s-primary-dark-h), var(--s-primary-dark-s), calc(var(--s-primary-dark-l) + 15%), var(--s-primary-dark-a));
  // }
  // @media (prefers-color-scheme: dark) {
  //   :host {
  //     color: hsla(var(--s-primary-dark-h), var(--s-primary-dark-s), calc(var(--s-primary-dark-l) + 15%), var(--s-primary-dark-a));
  //     background: hsla(var(--s-primary-dark-h), var(--s-primary-dark-s), calc(var(--s-primary-dark-l) + 15%), var(--s-primary-dark-a));
  //   }
  // }
  // @media (prefers-color-scheme: light) {
  //   :host {
  //     color: hsla(var(--s-primary-dark-h), var(--s-primary-dark-s), calc(var(--s-primary-dark-l) + 15%), var(--s-primary-dark-a));
  //     background: hsla(var(--s-primary-dark-h), var(--s-primary-dark-s), calc(var(--s-primary-dark-l) + 15%), var(--s-primary-dark-a));
  //   }
  // }
// }
