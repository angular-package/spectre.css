// Modules.
@use 'list';
@use 'map';
@use 'string';

// Status: DONE
// The `name()` function defines name from the given list and `$dictionary`, separated by the given `$separator`.
@function name($name, $dictionary: (), $separator: null) {
  // Extract map.
  $extracted: list.extract-map($name);

  // Get dictionary extracted from the list.
  $dictionary: map.merge($dictionary, map.get($extracted, map, ()));

  // Remove var modifiers.
  $name: list.remove-list(map.get($extracted, list));

  // Return string-type name.
  @return string.join(
    $separator or map.get($dictionary, separator),
    map.values(
      $dictionary,
      list.join(
          list.join(map.get($dictionary, prefix), $name, comma),
          map.get($dictionary, suffix)
        )...
    )...
  );
}

// Examples.
// @debug name(border width 20,  $separator: '-'); // -border-width-20
// @debug name('' border width,  $separator: '-'); // -border-width
// @debug name('' border width '',  $separator: '-'); // -border-width-
// @debug name(border width '',  $separator: '-'); // 'border-width-'

// dictionary in the name as map
// @debug name(border width, ( 'prefix': 's', 'suffix': 'lg'), '-'); // s-border-width-lg
// @debug name(border width lg, ('prefix': 's'), '-'); // 's-border-width-lg'
// @debug name(border ('prefix': 's') width lg, (), '-'); // 's-border-width-lg'

// any modifiers in the name as list
// @debug name('' border (var modifiers) width,  $separator: '-'); // -border-width
