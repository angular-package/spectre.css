// Sass.
@use 'sass:list';
@use 'sass:meta';

// Modules.
@use '../../property';

// Functions.
@use '../../list/nth/list.nth.function' as *;
@use '../../var/functions/var.get.function' as *;

// The `padding()` mixin.
@mixin padding($padding, $important: false, $dictionary: (), $function: (get: meta.get-function("get"))) {
  @include property.set((padding: list.append($padding, ())), $important, $dictionary, $function);
}

// The `top()` mixin.
@mixin top($top, $important: false, $dictionary: (), $function: (get: meta.get-function("get"))) {
  @include property.set((padding-top: $top), $important, $dictionary, $function);
}

// The `right()` mixin.
@mixin right($right, $important: false, $dictionary: (), $function: (get: meta.get-function("get"))) {
  @include property.set((padding-right: $right), $important, $dictionary, $function);
}

// The `bottom()` mixin.
@mixin bottom($bottom, $important: false, $dictionary: (), $function: (get: meta.get-function("get"))) {
  @include property.set((padding-bottom: $bottom), $important, $dictionary, $function);
}

// The `left()` mixin.
@mixin left($left, $important: false, $dictionary: (), $function: (get: meta.get-function("get"))) {
  @include property.set((padding-left: $left), $important, $dictionary, $function);
}

// The `x()` mixin.
@mixin x($x, $important: false, $dictionary: (), $function: (get: meta.get-function("get"))) {
  @include property.set((padding-left: nth($x, 1) ()), $important, $dictionary, $function);
  @include property.set((padding-right: nth($x, 2) or nth($x, 1) ()), $important, $dictionary, $function);
}

// The `y()` mixin.
@mixin y($y, $important: false, $dictionary: (), $function: (get: meta.get-function("get"))) {
  @include property.set((padding-top: nth($y, 1) ()), $important, $dictionary, $function);
  @include property.set((padding-bottom: nth($y, 2) or nth($y, 1) ()), $important, $dictionary, $function);
}

// Examples.
// div {
  // @include padding(1px); // padding: 1px
  // @include padding(1px 2px); // padding: 1px 2px;
  // @include padding((layout spacing true) (unit 2)); // padding: calc(var(--s-layout-spacing) * 1rem) var(--s-unit-2);

  // @include padding(((unit 1) ())); // padding: var(--s-unit-1);
  // @include padding((unit 1) (unit 2)); // padding: var(--s-unit-1) var(--s-unit-2);
  // @include padding((unit 1) (unit 2) (unit 5)); // padding: var(--s-unit-1) var(--s-unit-2) var(--s-unit-5);

  // @include top(--get unit 10); // padding-top: var(--s-unit-10);
  // @include top((unit 10) ()); // padding-top: var(--s-unit-10);

  // @include right(--get unit 5); // padding-right: var(--s-unit-5);
  // @include right((unit 5) ()); // padding-right: var(--s-unit-5);

  // @include bottom(--get unit 3); // padding-bottom: var(--s-unit-3);
  // @include bottom((unit 3) ()); // padding-bottom: var(--s-unit-3);

  // @include left(--get unit 4); // padding-left: var(--s-unit-4);
  // @include left((unit 4) ()); // padding-left: var(--s-unit-4);

  // @include x((unit 7) (unit 10)); // padding-left: var(--s-unit-7); padding-right: var(--s-unit-10);
  // @include y((unit 9) (unit 5)); // padding-bottom: var(--s-unit-5); padding-top: var(--s-unit-9);

  // @include x(2px);
  // @include y(2px);

  // dictionary
  // @include padding((unit 1) (unit 2), $dictionary: (prefix: spectre, suffix: basic, unit: u)); // padding: var(--spectre-u-1-basic) var(--spectre-u-2-basic);
// }
