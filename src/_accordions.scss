@use '../variables' as *;

// Mixins.
@use 'mixins/color/background.mixin' as *;
@use 'mixins/color/color.mixin' as *;
@use 'mixins/margin.mixins' as *;
@use 'mixins/padding.mixins' as *;
@use 'mixins/shadow' as *;
@use 'mixins/transition.mixin' as *;

// Accordions
.accordion,
#{$var-prefix}-accordion {

  input:checked ~,
  &[open] {
    & .accordion-header > {
      .icon:first-child {
        transform: rotate(90deg);
      }
    }

    & .accordion-body {
      max-height: 50rem;
    }
  }

  .accordion-header {
    display: block;
    // padding: $unit-1 $unit-2; // old spectre.css
    // padding: get-var('unit-1') get-var('unit-2'); // old @angular-package/spectre.css
    @include padding('unit-1', 'unit-2');

    .icon {
      // transition: transform 0.25s; // old spectre.css
      // transition: transform calc(get-var('transition-duration') + 0.05s); // old @angular-package/spectre.css
      @include transition((transform, 0.05s));
    }
  }

  .accordion-body {
    // margin-bottom: $layout-spacing; // old spectre.css
    // margin-bottom: get-var('layout-spacing', $unit: true); // old @angular-package/spectre.css
    @include margin-bottom(('layout-spacing', true));
    max-height: 0;
    overflow: hidden;
    // transition: max-height 0.25s; // old spectre.css
    // transition: max-height calc(get-var('transition-duration') + 0.05s); // old @angular-package/spectre.css
    @include transition((max-height, 0.05s));
  }
}

// Remove default details marker in Webkit
summary.accordion-header {
  &::-webkit-details-marker {
    display: none;
  }
}

.accordion,
#{$var-prefix}-accordion {
  &.accordion-menu {
    .menu {
      .menu-item {
        a {
          @media (prefers-color-scheme: dark) {
            @include color('gray-dark');
          }
          @media (prefers-color-scheme: light) {
            @include color('gray-dark');
          }

          &:hover,
          &.active {
            @media (prefers-color-scheme: dark) {
              @include background('secondary-light');
              @include color('body-font-color');
            }
            @media (prefers-color-scheme: light) {
              @include background('secondary');
              @include color('primary');
            }
          }
          &.active {
            @media (prefers-color-scheme: dark) {
              @include control-shadow('secondary-light');
            }
            @media (prefers-color-scheme: light) {
              @include background('secondary');
            }
          }

          border-radius: get-var('border-radius');
          @include transition(background, color, box-shadow);
        }
      }
    }
  }
}
