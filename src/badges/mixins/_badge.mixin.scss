// Modules.
@use '../../module';
@use '../../property';
@use '@angular-package/sass/color';

// Status: DONE
// The `badges.badge()` mixin.
// @param `$class`
// @param `$pseudo-class`
// @param `$dictionary`
@mixin badge(
  $class: (),
  $pseudo-class: (),
  $dictionary: module.dictionary(badge, true, class, var),
) {
  #{module.class(badge, $class, $pseudo-class, $dictionary)} {
    position: relative;
    white-space: nowrap;

    &[data-badge],
    &:not([data-badge]) {
      &::after {
        content: attr(data-badge);
        display: inline-block;
        border-radius: 0.5rem;
        @include color.background(primary, $dictionary: $dictionary);

        background-clip: padding-box;
        @include color.color(light, $dictionary: $dictionary);
        @include property.box-shadow(0 0 0 0.1rem (bg light), $dictionary: $dictionary);

        transform: translate(-0.05rem, -0.5rem);
      }
    }

    &[data-badge] {
      &::after {
        min-width: 0.9rem;
        height: 0.9rem;
        padding: 0.1rem 0.2rem;
        @include property.font-size(sm, $dictionary: $dictionary);

        line-height: 1;
        text-align: center;
        white-space: nowrap;
      }
    }

    &:not([data-badge]),
    &[data-badge=''] {
      &::after {
        width: 6px;
        min-width: 6px;
        height: 6px;
        padding: 0;
      }
    }

    // Badges for Buttons
    #{module.class(button, '&', '::after', $dictionary)} {
      position: absolute;
      top: 0;
      right: 0;
      transform: translate(50%, -50%);
    }

    // Badges for Avatars
    #{module.class(avatar, '&', '::after', $dictionary)} {
      position: absolute;
      top: 14.64%;
      right: 14.64%;
      @include property.z-index(1, $dictionary: $dictionary);

      transform: translate(50%, -50%);
    }
  }
}
