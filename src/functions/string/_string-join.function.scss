// Sass.
@use 'sass:list';
@use 'sass:meta';
@use 'sass:string';

// Status: DONE
// The `string-join()` function returns the string built from the given elements separated by the given separator
// in original elements order.
@function string-join($separator: '', $elements...) {
  $string: '';
  $separator: $separator or '';
  @if list.length($elements) > 0 {
    @each $element in $elements {
      @if type-of($element) == list {
        @each $value in $element {
          $string: -string-join($string, $value, $separator);
        }
      } @else if type-of($element) == string {
        $string: -string-join($string, $element, $separator);
      }
    }
  }
  @return string.slice($string, 1, calc((string.length($separator) + 1) * -1));
}

// Private -`string-join()` function.
@function -string-join($string, $value, $separator) {
  @return if(meta.type-of($value) == string, '#{$string}#{$value}#{$separator}', $string);
}

// The `join()` function.
@function join($separator: '', $elements...) {
  @return string-join($separator, $elements...);
}

// Examples.
// @debug string-join('-');
// @debug string-join('-', 'a', 'b', 'c'); // a-b-c
// @debug string-join('-', '', 'a', 'b', 'c'); // -a-b-c
// @debug string-join('-', 'a', 'b', 'c', ''); // a-b-c-
// @debug string-join('-', '', 'a', 'b', 'c', ''); // a-b-c-
// @debug string-join('-', 'a', ('b', 'c')); // a-b-c
