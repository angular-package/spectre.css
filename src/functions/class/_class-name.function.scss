// Sass.
@use 'sass:list';

// Functions.
@use '../dictionary/dictionary.function' as *;
@use '../list/has/list-has-string.function' as *;
@use '../list/remove/list-remove-string.function' as *;
@use '../name.function' as *;

// Status: REVIEW:
// https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Selectors
// The `class-name()` function defines name from the given list and `$dictionary`, separated by the given `$separator`.
@function class-name($name, $dictionary: (), $separator: null) {
  $selector: ();

  // If name is built from the list.
  @if list.length($name) > 1 {
    // Parent and class selector in indexes.
    @if list-has-string($name, any, '==', '&', '.') {
      $selector: if(list.index($name, '&'), list.append($selector, '&'), $selector);
      $selector: if(list.index($name, '.'), list.append($selector, '.'), $selector);

    // Both parent and class selector in index.
    } @else if list-has-string($name, any, '==', '&.') {
      $selector: list.join($selector, ('&', '.'), comma);
    }

    // REVIEW: Check.
    $name: list-remove-string($name, '&', '.', '&.');
  }

  @return #{name($selector) + name($name, dictionary-merge('class', $dictionary), $separator)};
}

// Examples.
// Execute: sass src/functions/class/_class-name.function.scss

// @debug class-name('border' 'width' 'lg'); // border-width-lg
// @debug class-name('.' 'border' 'width' 'lg'); // .border-width-lg
// @debug class-name('&' 'border' 'width' 'lg'); // &border-width-lg
// @debug class-name('.' '&' 'border' 'width' 'lg'); // &.border-width-lg
// @debug class-name('&' '.' 'border' 'width' 'lg'); // &.border-width-lg
// @debug class-name('&.' 'border' 'width' 'lg'); // &.border-width-lg
// @debug class-name('border' 'width' '&.' 'lg'); // &.border-width-lg
// @debug class-name('border' '&' 'width' '&' '.' 'lg'); // &.border-width-lg

// separator
// @debug class-name('' 'border' 'width' 'lg'); // -border-width-lg
// @debug class-name('' 'border' 'width' 'lg' ''); // -border-width-lg-
// @debug class-name('border' 'width' 'lg' ''); // border-width-lg-
// @debug class-name('border' 'width' 'lg', $separator: '--'); // border--width--lg

// dictionary
// @debug class-name('border' 'width' 'lg', ('prefix': 'spectre', 'suffix': 'ver2')); // spectre-border-width-lg-ver2
// @debug class-name('border' ('prefix': 'spectre', 'suffix': 'ver2') 'width' 'lg'); // spectre-border-width-lg-ver2
// @debug class-name('border' ('border': 'modified-border') 'width' 'lg'); // modified-border-width-lg
// @debug class-name('border' 'width' 'lg', ('border': 'modified-border')); // modified-border-width-lg
// @debug class-name('border' 'width' 'lg', ('width': 'modified-width', 'lg': 'lg-modified')); // border-modified-width-lg-modified

// other
// @debug class-name('border' 'width' 'lg' ' ' 'border' '>' 'active'); // border-width-lg- -border->-active
// @debug class-name('border' 'width' 'lg' '~' 'border' '+' 'active'); // border-width-lg-~-border-+-active
// @debug class-name('border' 'width' 'lg' ' ' 'border' '||' 'active'); // border-width-lg- -border-||-active
// @debug class-name('100' 'border' 'width'); // 100-border-width
// @debug class-name('border' 'width' '100'); // border-width-100
// @debug class-name('border' 'width' '200'); // border-width-200
// @debug class-name('dark' 'theme' ' ' 'button' 'red' ' ' 'icon' 'svg'); // dark-theme- -button-red- -icon-svg
// @debug class-name('light' 'theme' ' ' 'button' 'red'); // light-theme- -button-red
// @debug class-name('.' '100' 'border' 'width'); // .100-border-width
// @debug class-name('&' '.' '100' 'border' 'width'); // &.100-border-width
