// Variables.
@use '../variables' as *;

// Functions.
@use '../functions/var/get-var.function' as *;
@use '../functions/var/unit-var.function' as *;
@use '../functions/var/var-negative.function' as *;

// Mixins.
@use '../mixins/border/border.mixin' as *;
@use '../mixins/color/background.mixin' as *;
@use '../mixins/color/color.mixin' as *;
@use '../mixins/margin.mixins' as *;
@use '../mixins/padding-size-variants.mixin' as *;
@use '../mixins/padding.mixins' as *;

// Divider
.divider,
.#{$var-prefix}-divider,
.divider-vert {
  display: block;
  position: relative;

  &[data-content]::after {
    @include background('bg-light');
    @include color('gray');
    content: attr(data-content);
    display: inline-block;
    font-size: get-var('font-size', $suffix: 'sm');
    @include padding('unit-0', 'unit-2');
    transform: translateY(calc(var-negative(get-var('font-size', $suffix: 'sm')) + get-var('border-width')));
  }

  &.divider-no-border {
    border-color: transparent;
    &::before {
      border-color: transparent;
    }
  }

  @include padding-size-variants('divider');
}

.divider,
.#{$var-prefix}-divider {
  @include border($side: top, $color: 'border-light');
  height: get-var('border-width');
  @include margin('unit-2', 'unit-0');

  &[data-content] {
    @include margin('unit-4', 'unit-0');
  }
}

.divider-vert {
  display: block;
  padding: unit-var('4');

  &::before {
    @include border($side: 'left');
    bottom: unit-var('2');
    content: '';
    display: block;
    left: 50%;
    position: absolute;
    top: unit-var('2');
    transform: translateX(-50%);
  }

  &[data-content]::after {
    left: 50%;
    @include padding('unit-1', 'unit-0');
    position: absolute;
    top: 50%;
    transform: translate(-50%, -50%);
  }
}
