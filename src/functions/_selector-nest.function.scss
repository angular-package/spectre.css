// Sass.
@use 'sass:list';
@use 'sass:map';
@use 'sass:selector';
@use 'sass:string';

// Functions.
@use 'list/has/list-has-string.function' as *;
@use 'list/is/is-list-length.function' as *;
@use 'list/is/is-list.function' as *;
@use 'list/list-replace-string.function' as *;
@use 'list/remove/list-remove-list.function' as *;
@use 'list/remove/list-remove-nth.function' as *;
@use 'name.function' as *;
@use 'replace-parent-placeholder.function' as *;
@use 'replace-parent-selector.function' as *;
@use 'selector-name.function' as *;
@use 'string/string-replace.function' as *;

// Selectors.
$selectors: ('&', '.', '&.', __CLASS__);

// The `selector-nest()` function.
@function selector-nest($selector, $dictionary: (), $placeholder: __PARENT__) {
  // Name of string.
  @if type-of($selector) == string {
    $selector: list.join((), $selector);
  }

  // Name of list of strings, or name of list of list of strings.
  @else if is-list($selector, 0) {
    @if list-has-string($selector,  all) {
      @if list-has-string($selector, any, $selectors...) {
        $selector: selector-name($selector, $dictionary);
      }
    } @else {
      $i: 1;
      @each $name in $selector {
        @if list-has-string($name, any, $selectors...) {
          $selector: list.set-nth($selector, $i, selector-name($name, $dictionary));
        } @else {
          $j: 1;
          @each $value in $name {
            $name: list.set-nth($name, $j, selector-name($value, $dictionary));
            $j: $j + 1;
          }

          $selector: list.set-nth($selector, $i, $name);
        }

        $i: $i + 1;
      }
    }

    @return selector.nest($selector...);

    // Use sass nest.
    @if is-list-length($selector, 0) {
      $selector: selector.nest(replace-parent-selector($selector, $placeholder)...);

      // Replace empty placeholder for example placeholder.
      $selector: list-replace-string($selector, __CLASS__, '');
    }

    @return replace-parent-placeholder($selector, $placeholder);
  }

  @return selector.nest($selector...);
}

@debug selector-nest(('span', '&', '.', 'border', 'width'));

// @debug selector.nest(("span", "&.border-width", "b", "&.div-border-height")...);
// @debug selector-nest(((('&', 'span', '.', 'border', 'width'), 'b', ('&', 'div', '.', 'border', 'height'))));
// @debug selector-nest(((('span', '&', '.', 'border', 'width'), 'b', ('&', 'div', '.', 'border', 'height'))));
// @debug selector-nest((('.', 'border'), (('&', '', 'width'), ('&', '', 'height'))));

// Examples.
// @debug selector-nest('border-width'); // DONE
// @debug selector-nest('.border-width'); // DONE
// @debug selector-nest(('border', 'width')); // DONE
// @debug selector-nest(('border-width', '&:hover')); // DONE
// @debug selector-nest((('.', 'border', 'width'), '&:hover')); // DONE
// @debug selector-nest((('.', 'btn', '&', 'dark', '&', 'xs'),)); // DONE
@debug selector-nest((('&', '.', 'btn', 'dark', 'xs'),)); // DONE
// @debug selector-nest(('span', '&', '.', 'border', 'width'));
// @debug selector-nest((('.', 'border', 'width'),),);
// @debug selector-nest((('&.', 'border', 'width'),));
// @debug selector-nest((('&', '.', 'border', 'width'),));
// @debug selector-nest((('&', '.', 'border', 'width'), ('&', '.', 'border', 'width', 'lg'),));
// @debug selector-nest(((('&', '.', 'border', 'width'), ('&', '.', 'border', 'width', 'lg')),));
// @debug selector-nest(((('&', '.', 'card'), ('&', '.', 'border')), (('&', 'header', 'a'), ('&', 'header', 'b'))));
// @debug selector-nest((('&', '.', 'card'), (('&', 'header', 'a'), ('&', 'header', 'b'))));
// @debug selector-nest(('&.card', (('&', 'header', 'a'), ('&', 'header', 'b'))));
// @debug selector-nest(('&.card', (('&', '-', 'header', 'a'), ('&', '-', 'header', 'b')), ('&', '-', 'primary')));
// @debug selector-nest((('&', '.', 'card'), (('&', 'header'), ('&', 'body'), ('&', 'footer'),)));

// Examples: empty placeholder.
// @debug selector-nest((('&', '.', __CLASS__), (('&', 'header'), ('&', 'body'), ('&', 'footer'),)));
// @debug selector-nest(((".", "card"), (("&", "header"), ("&", "body"), ("&", "footer"))));
// @debug selector-nest((("card__CLASS__",), (("&", "header"), ("&", "body"), ("&", "footer"))),);
// @debug selector-nest((('.', "card",), (('&', '', "header"), ('&', '', 'person')), (('&', '', "body"), ('&', '', "footer"))),);
// @debug selector-nest((('.', "card",), (('&', '', "header"), ('&', '', 'person')), ('&', '', 'between') , (('&', '', "body"), ('&', '', "footer"))),);

// Examples: tag.
// @debug selector-nest(('&', '.', 'a', 'b'));
