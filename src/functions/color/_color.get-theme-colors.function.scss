// Sass.
@use 'sass:list';
@use 'sass:map';
@use 'sass:string';

// Status: REVIEW: Check.
// The `get-theme-colors()` function.
@function get-theme-colors($theme, $colors...) {
  $theme-color-variants: ();

  @if type-of($theme) == map {
    $colors: if(list.nth($colors, 1) == true, map.keys($theme), $colors);

    @if (type-of($colors) == arglist or type-of($colors) == list) and list.length($colors) > 0 {
      @each $theme-name in $colors {
        $-theme-color-variants: ();

        @each $variant, $color in map.get($theme, $theme-name) {
          $-theme-color-variants: list.append($-theme-color-variants, ($variant: $color), $separator: 'comma');
        }

        // Set the `$theme-name` to empty string, cause dot indicates no variant.
        @if type-of($theme-name) == string and string.index($theme-name, '.') {
          $theme-name: '';
        }

        $theme-color-variants: list.append($theme-color-variants, ($theme-name: $-theme-color-variants), $separator: 'comma');
      }
    }
  }

  @return $theme-color-variants;
}
