// Sass.
@use 'sass:list';

// Functions.
@use '../is/is-list-length.function' as *;

// Status: REVIEW: Seems OK.
// The `list-get-list()` function returns the list from the given list if exists, otherwise null.
@function list-get-list($list, $join: true) {
  $result: ();
  @if is-list-length($list, 0) {
    @each $element in $list {
      @if type-of($element) == list {
        $result: if(
          $join,
          list.join((list1: $result, list2: $element, separator: list.separator($list))...),
          list.append((list: $result, val: $element, separator: list.separator($list))...)
        );
      }
    }
  }
  @return if(is-list-length($result, 0), $result, null);
}

// Examples.
// @debug list-get-list(('a', 'b', 'c')); // Returns `null`
// @debug list-get-list(('a', 'b', 'c', ('d', 'e', 'f'))); // Returns ("d", "e", "f")
// @debug list-get-list(('a', 'b', 'c', ('d', 'e', 'f'), 'g', 'h', (1, 2, 3))); // Returns ("d", "e", "f", 1, 2, 3)
// @debug list-get-list(('a', 'b', 'c', ('d', 'e', 'f'), 'g', 'h', (1, 2, 3)), true); // Returns ("d", "e", "f"), (1, 2, 3)
// @debug list-get-list(('a', 'b', 'c', ('d', (1, 2, 3, (4, 5, 6)), 'e', 'f'))); // Returns ("d", (1, 2, 3, (4, 5, 6)), "e", "f")

// Append.
// @debug list-get-list(('a', 'b', 'c', ('d', 'e', 'f'), 'g', 'h', (1, 2, 3)), false); // Returns ("d", "e", "f"), (1, 2, 3)
