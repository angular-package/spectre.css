// Variables.
@use '../variables' as *;
@use '../../buttons/variables' as *;
@use '../../variables/core' as *;

// Functions.
@use '../../borders/mixins/color/border-color.mixin' as *;
@use '../../functions/class/active-class.function' as *;
@use '../../buttons/functions/button-class.function' as *;
@use '../../functions/class/class.function' as *;
@use '../../functions/color/color.function' as *;
@use '../../functions/var/css-var.function' as *;
@use '../../functions/var/unit-var.function' as *;
@use '../../functions/var/var-negative.function' as *;
@use '../functions' as *;

// Mixins.
@use '../../badges/functions/badge-class.function' as *;
@use '../../borders/mixins/border.mixin' as *;
@use '../../mixins/color/color.mixin' as *;
@use '../../mixins/margin.mixins' as *;

// The `tab()` mixin.
@mixin tab($class: '', $selector: (), $dictionary: ()) {
  #{tab-class($class, $selector, $dictionary)} {
    display: flex;
    flex-wrap: wrap;
    align-items: center;
    margin: css-var(('unit', '1')) 0 calc(css-var(('unit', '1')) - css-var(('border', 'size', 'md'))) 0; // TODO: Use the margin
    @include border($side: bottom, $radius: true);

    list-style: none;

    #{tab-class(($class, 'item'), (), $dictionary)} {
      margin-top: 0;

      a {
        // Display.
        display: block;

        // Size.
        // padding: css-var('unit-2') css-var('unit-1') calc(css-var('unit-2') - css-var('border-width', $suffix: 'lg')) css-var('unit-1');
        @include margin(('unit', '0'), ('unit', '2'), ('unit', '0'), ('unit', '0'));

        padding: css-var(('unit', '2')) css-var(('unit', '1')) calc(css-var(('unit', '2')) - css-var(('border', 'size', 'lg'))) css-var(('unit', '1'));

        // border-bottom: css-var('border-width', $suffix: 'lg') solid transparent;
        @include border('lg', $side: bottom, $color: transparent);

        color: inherit;
        @include color('link', $selector: (('&:focus', '&:hover',),));

        text-decoration: none;
        cursor: pointer;

        i, svg {
          pointer-events: none;
        }
      }

      // &.active a,
      #{active-class('&')} a,
      // a.active {
      a#{active-class()} {
        // border-bottom-color: color('primary');
        @include border-color($side: 'bottom', $color: 'primary');
        @include color('link');
      }

      #{tab-class(('&', $class, 'action'), (), $dictionary)} {
        flex: 1 0 auto;
        text-align: right;
      }

      #{button-class('clear')} {
        // margin-top: var-negative(unit-var('1'));
        @include margin-top(('!', 'unit', '1'));
      }
    }
    #{tab-class(('&', $class, 'block'), (), $dictionary)} {
      #{tab-class(($class, 'item'), (), $dictionary)} {
        flex: 1 0 0;
        text-align: center;

        a {
          margin: 0;
        }

        // #{class('badge')} {
        #{badge-class()} {
          &[data-badge]::after {
            position: absolute;
            top: unit-var('h');
            right: unit-var('h');
            transform: translate(0, 0);
          }
        }
      }
    }
    &:not(#{tab-class(($class, 'block'), (), $dictionary)}) {
      // #{class('badge')} {
      #{badge-class()} {
        padding-right: 0;
      }
    }
  }

  #{tab-class(($class, 'container'), (), $dictionary)} {
    // li.spacer {
    li#{class('spacer')} {
      display: flex;
      flex: 1 1 100%;
    }
    #{tab-class($class, (), $dictionary)} {
      flex-wrap: unset;
    }
    #{tab-class(($class, 'content'), (), $dictionary)} {
      > div {
        display: none;

        // &.active {
        #{active-class('&')} {
          display: block;
        }
      }
    }
  }
}
