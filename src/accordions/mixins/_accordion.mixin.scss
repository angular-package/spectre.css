// Sass.
@use 'sass:map';

// Modules.
@use '../../module';
@use '../../property';
@use '../../property/margin';
@use '../../property/padding';

// Status: DONE
// The `accordion.accordion()` mixin.
// @param `$class`
// @param `$pseudo-class`
// @param `$dictionary`
@mixin accordion(
  $class: (),
  $pseudo-class: (),
  $dictionary: module.dictionary(accordion, true, class, var),
  // $delimiter: null,
  // $prefix: null,
  // $suffix: null
) {
  #{module.class(accordion, $class, $pseudo-class, $dictionary)} {
    input:checked ~,
    &[open] {
      & #{module.class(accordion, join($class, header), (), $dictionary)} > {
        svg,
        #{module.class(icon, (), ':first-child', $dictionary)} {
          transform: rotate(90deg);
        }
      }

      & #{module.class(accordion, join($class, body), (), $dictionary)} {
        overflow: visible;
        max-height: 60rem;
      }
    }

    #{module.class(accordion, join($class, header), (), $dictionary)} {
      display: block;
      @include padding.padding((unit 1) (unit 2), false, $dictionary);

      > svg,
      > #{module.class(icon, (), (), $dictionary)} {
        @include property.transition((transform: 0.05s), false, $dictionary);
        @include margin.right((unit 2) (), false, $dictionary);
      }
    }

    #{module.class(accordion, join($class, body), (), $dictionary)} {
      overflow: hidden;
      max-height: 0;
      @include margin.bottom((layout spacing true) (), false, $dictionary);
      @include property.transition((max-height: 0.05s), false, $dictionary);
      #{module.class(menu, item, (), $dictionary)} > a {
        align-items: center;
      }
    }
  }

  // Remove default details marker in Webkit
  summary#{module.class(accordion, join($class, header), '::-webkit-details-marker', $dictionary)} {
    display: none;
  }
}
