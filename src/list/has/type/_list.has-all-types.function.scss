// Functions.
@use 'list.has-type.function' as *;

// Status: DONE
// The `has-all-types()` function.
// ! $occurrence: all
// ? $operator: == and !=
// ? $types: arglist bool calculation color function list map null number string
@function has-all-types($list, $operator: '==', $types...) {
  $has: false;
  @each $type in $types {
    $has: has-type($list, any, $operator, $type);
    @if not $has {
      @return false;
    }
  }
  @return $has;
}

// Examples.
// bool
// @debug '-- bool';
// @debug has-all-types((true, false, true, false), '==', bool); // true
// @debug has-all-types(('a', false, 'b', 'c'), '==', bool); // true
// @debug has-all-types(('a', 'false', 'b', 'c'), '==', bool); // false

// @debug '-- string';
// @debug has-all-types(('a', 'b', 'c'), '==', string); // true
// @debug has-all-types(('a', 1, 'b', 'c'), '==', string); // true
// @debug has-all-types((('a',) 1, ('b', 'c')), '==', string); // false

// @debug '-- number';
// @debug has-all-types((43, 12, 13, 21), '==', number); // true
// @debug has-all-types(('a', 'b', 1, 'c'), '==', number); // true
// @debug has-all-types(('a', 'b', 'c'), '==', number); // false
// @debug has-all-types(('a', 'b', '2', 'c'), '==', number); // false

// @debug '-- null';
// @debug has-all-types((null, null, null, null), '==', null); // true
// @debug has-all-types(('a', ('b', 'c'), null), '==', null); // true
// @debug has-all-types(('a', ('b', 'c'), 'null'), '==', null); // false
// @debug has-all-types(('a', ('b', 'c'), 'null'), '!=', null); // true

// @debug '-- list';
// @debug has-all-types((('a',), ('b',), ('c',), ('d',)), '==', list); // true
// @debug has-all-types((('a',), ('b',), ('c',), ('d',), 1), '==', list); // true
// @debug has-all-types((1, 2), '==', list); // false
// @debug has-all-types(((a: 1), ), '==', list); // false

// @debug '-- map';
// @debug has-all-types((('a': 1), ('b': 2), ('c': 3), ('d': 4)), '==', map); // true
// @debug has-all-types((('a': 1), ('b': 2), ('c': 3), ('d': 4), 'a'), '==', map); // true

// different
// @debug '-- different';
// @debug has-all-types(('a', 'b', 1, 'c'), '==', number, string); // true
// @debug has-all-types(('a', ('b', 'c'), 4, null), '==', string, null, list, number); // true
// @debug has-all-types(('a', ('b', 'c'), 4, null, ('a': 1)), '==', string, null, list, number, map); // true
// @debug has-all-types(('a', 'b', 'c'), '==', string, number, bool); // false
// @debug has-all-types(('a', 'b', 'c', true, 5), '==', string, number, bool); // true
// @debug has-all-types(('a', 'b', 'c'), '==', string, number); // false
// @debug has-all-types(('a', 'b', 1, 'c'), '==', number, null); // false
// @debug has-all-types(('a', false, 'b', 'c'), '==', number, null); // false
// @debug has-all-types(('a', false, 'b', 'c'), '==', list, string); // false
// @debug has-all-types(('a', ('b', 'c'), null), '==', string, list, null, number); // false
