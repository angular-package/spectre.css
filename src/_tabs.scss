// Variables.
@use 'variables/core' as *;

// Functions.
@use 'functions/color/color.function' as *;
@use 'functions/var/get-var.function' as *;
@use 'functions/var/unit-var.function' as *;
@use 'functions/var/var-negative.function' as *;

// Mixins.
@use 'borders/mixins/border.mixin' as *;
@use 'mixins/color/color.mixin' as *;
@use 'mixins/margin.mixins' as *;

// Tabs
.#{$class-prefix}tab {
  // Display.
  display: flex;
  flex-wrap: wrap;
  align-items: center;
  list-style: none;

  // Position.
  margin: get-var('unit-1') 0 calc(get-var('unit-1') - get-var('border-width')) 0; // TODO: Use the margin

  // Border.
  @include border($side: bottom, $radius: 'border-radius');

  .tab-item {
    margin-top: 0;
    a {
      // Position.
      @include margin('unit-0', 'unit-2', 'unit-0', 'unit-0');
      // Display.
      display: block;
      // Size.
      padding: get-var('unit-2') get-var('unit-1') calc(get-var('unit-2') - get-var('border-width', $suffix: 'lg')) get-var('unit-1');
      border-bottom: get-var('border-width', $suffix: 'lg') solid transparent;
      color: inherit;
      text-decoration: none;
      @include color('link', $selector: (':focus', ':hover'));
    }
    &.active a,
    a.active {
      border-bottom-color: color('primary');
      @include color('link');
    }

    &.tab-action {
      flex: 1 0 auto;
      text-align: right;
    }

    .btn-clear {
      margin-top: var-negative(unit-var('1'));
    }
  }

  &.tab-block {
    .tab-item {
      flex: 1 0 0;
      text-align: center;

      a {
        margin: 0;
      }

      .badge {
        &[data-badge]::after {
          position: absolute;
          top: unit-var('h');
          right: unit-var('h');
          transform: translate(0, 0);
        }
      }
    }
  }

  &:not(.tab-block) {
    .badge {
      padding-right: 0;
    }
  }
}
