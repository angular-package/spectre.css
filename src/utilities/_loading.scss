// Variables.
@use '../buttons/variables/button.var' as *;
@use '../variables/core' as *;

// Functions.
@use '../buttons/functions' as *;
@use '../functions/class/class.function' as *;
@use '../functions/color/color.function' as *;
@use '../functions/var/unit-var.function' as *;
@use '../functions/var/var-negative.function' as *;

// Mixins.
@use '../borders/functions/border-size-var.function' as *;
@use '../mixins/z-index.mixin' as *;

/*! Spectre.css: loading | utilities | color-scheme: #{$color-scheme} | MIT License | github.com/angular-package/spectre.css */
#{class('loading')} {
  position: relative;
  min-height: unit-var('4');
  pointer-events: none;

  // Buttons.
  // &.#{$button} {
  #{button-class('&')} {
    color: transparent !important;
  }

  // Not buttons.
  // &:not(.#{$button}) {
  &:not(#{button-class()}) {
    color: color('primary');
  }

  &::after {
    content: '';

    // Position.
    position: absolute;
    top: 50%;
    left: 50%;
    @include z-index('0');

    display: block;
    width: unit-var('4');
    height: unit-var('4');
    margin-top: var-negative(unit-var('2')); // TODO: var-negative
    margin-left: var-negative(unit-var('2'));
    padding: 0;

    // Border.
    // border-width: css-var('border-width-lg');
    border-width: border-size-var('lg');
    border-style: solid;
    border-color: currentcolor;
    border-top-color: transparent;
    border-right-color: transparent;
    border-radius: 50%;
    background: transparent;
    opacity: 1;
    animation: loading 500ms infinite linear;
  }

  // &.loading-lg {
  #{class(('&', 'loading', 'lg'))} {
    min-height: unit-var('10');

    &::after {
      width: unit-var('8');
      height: unit-var('8');
      margin-top: var-negative(unit-var('4'));
      margin-left: var-negative(unit-var('4'));
    }
  }
}
